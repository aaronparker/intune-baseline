{
  "@odata.context": "https://graph.microsoft.com/beta/$metadata#deviceManagement/deviceConfigurations(assignments())/$entity",
  "@odata.type": "#microsoft.graph.windows10CustomConfiguration",
  "@odata.id": "deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')",
  "@odata.editLink": "deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.windows10CustomConfiguration",
  "id": "48c69e85-abae-4fd5-b5ed-4b86ca1bae2f",
  "lastModifiedDateTime@odata.type": "#DateTimeOffset",
  "lastModifiedDateTime": "2025-03-19T23:16:22.2196937Z",
  "roleScopeTagIds@odata.type": "#Collection(String)",
  "roleScopeTagIds": [
    "0",
    "3"
  ],
  "supportsScopeTags": true,
  "deviceManagementApplicabilityRuleOsEdition": null,
  "deviceManagementApplicabilityRuleOsVersion": null,
  "deviceManagementApplicabilityRuleDeviceMode": null,
  "createdDateTime@odata.type": "#DateTimeOffset",
  "createdDateTime": "2025-03-06T03:09:59.4447278Z",
  "description": "Places devices into AppLocker audit mode. Note issues documented here: https://docs.microsoft.com/en-us/mem/autopilot/policy-conflicts",
  "displayName": "Prod-Windows-AppLocker-AuditMode-Device",
  "version": 2,
  "omaSettings@odata.type": "#Collection(microsoft.graph.omaSetting)",
  "omaSettings": [
    {
      "@odata.type": "#microsoft.graph.omaSettingStringXml",
      "displayName": "AppLocker Executable",
      "description": "Audit mode for executables",
      "omaUri": "./Vendor/MSFT/AppLocker/ApplicationLaunchRestrictions/Native/EXE/Policy",
      "secretReferenceValueId": null,
      "isEncrypted": false,
      "fileName": "AppLocker-Intune-Windows1121H2-Exe-Audit.xml",
      "value@odata.type": "#Binary",
      "value": ""
    },
    {
      "@odata.type": "#microsoft.graph.omaSettingStringXml",
      "displayName": "AppLocker Windows Installer",
      "description": "Audit mode for MSI files",
      "omaUri": "./Vendor/MSFT/AppLocker/ApplicationLaunchRestrictions/Native/MSI/Policy",
      "secretReferenceValueId": null,
      "isEncrypted": false,
      "fileName": "AppLocker-Intune-Windows1121H2-Msi-Audit.xml",
      "value@odata.type": "#Binary",
      "value": "PFJ1bGVDb2xsZWN0aW9uIFR5cGU9Ik1zaSIgRW5mb3JjZW1lbnRNb2RlPSJBdWRpdE9ubHkiPgogICAgPEZpbGVQYXRoUnVsZSBJZD0iYzY0ZTUyZmUtYmQwNS00M2VkLWFlOTEtZjM2MTIxODI4MjllIiBOYW1lPSJBbGwgV2luZG93cyBJbnN0YWxsZXIgZmlsZXMgdW5kZXIgJXdpbmRpciVcY2NtY2FjaGUiIERlc2NyaXB0aW9uPSJBbGxvd3MgZXZlcnlvbmUgdG8gcnVuIGluc3RhbGxlciBmaWxlcyBpbiB0aGUgU0NDTSBjYWNoZS4iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQYXRoQ29uZGl0aW9uIFBhdGg9IiVXSU5ESVIlXGNjbWNhY2hlXCoiIC8+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUGF0aFJ1bGU+CiAgICA8RmlsZVBhdGhSdWxlIElkPSI1YjI5MDE4NC0zNDVhLTQ0NTMtYjE4NC00NTMwNWY2ZDlhNTQiIE5hbWU9IihEZWZhdWx0IFJ1bGUpIEFsbCBXaW5kb3dzIEluc3RhbGxlciBmaWxlcyBpbiAlc3lzdGVtZHJpdmUlXFdpbmRvd3NcSW5zdGFsbGVyIiBEZXNjcmlwdGlvbj0iQWxsb3dzIG1lbWJlcnMgb2YgdGhlIEV2ZXJ5b25lIGdyb3VwIHRvIHJ1biBhbGwgV2luZG93cyBJbnN0YWxsZXIgZmlsZXMgbG9jYXRlZCBpbiAlc3lzdGVtZHJpdmUlXFdpbmRvd3NcSW5zdGFsbGVyLiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVBhdGhDb25kaXRpb24gUGF0aD0iJVdJTkRJUiVcSW5zdGFsbGVyXCoiIC8+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUGF0aFJ1bGU+CiAgICA8RmlsZVBhdGhSdWxlIElkPSI2NGFkNDZmZi0wZDcxLTRmYTAtYTMwYi0zZjNkMzBjNTQzM2QiIE5hbWU9IihEZWZhdWx0IFJ1bGUpIEFsbCBXaW5kb3dzIEluc3RhbGxlciBmaWxlcyIgRGVzY3JpcHRpb249IkFsbG93cyBtZW1iZXJzIG9mIHRoZSBsb2NhbCBBZG1pbmlzdHJhdG9ycyBncm91cCB0byBydW4gYWxsIFdpbmRvd3MgSW5zdGFsbGVyIGZpbGVzLiIgVXNlck9yR3JvdXBTaWQ9IlMtMS01LTMyLTU0NCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUGF0aENvbmRpdGlvbiBQYXRoPSIqLioiIC8+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUGF0aFJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImIyYTdiNGE1LWIyMGQtNGRlMy1hODAxLTI2YWY3Mzc4YWZmOSIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBTaWduZXIvcHJvZHVjdCBydWxlIGZvciBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMvTUlDUk9TT0ZUIFRFQU1TIiBEZXNjcmlwdGlvbj0iSW5mb3JtYXRpb24gYWNxdWlyZWQgZnJvbSBUcnVzdGVkU2lnbmVycy5wczEiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUIFRFQU1TIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJjMjRlMzk1Ny00NTAzLTRkNzEtYjAyMC0xYTI3YjJhN2U3ODUiIE5hbWU9Ik1pY3Jvc29mdC1zaWduZWQgTVNJIGZpbGVzOiBTaWduZXIgcnVsZSBmb3IgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBEZXNjcmlwdGlvbj0iSW5mb3JtYXRpb24gYWNxdWlyZWQgZnJvbSBUcnVzdGVkU2lnbmVycy5wczEiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iKiIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUGF0aFJ1bGUgSWQ9ImY3OTk5NWJjLTFhMDEtNGI5OS1hMTc4LWIwZjA3MjUzOTdiZSIgTmFtZT0iRGVueSBDOlxXaW5kb3dzXFRlbXAiIERlc2NyaXB0aW9uPSIiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkRlbnkiPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVBhdGhDb25kaXRpb24gUGF0aD0iQzpcV2luZG93c1xUZW1wIiAvPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVBhdGhSdWxlPgo8L1J1bGVDb2xsZWN0aW9uPg=="
    },
    {
      "@odata.type": "#microsoft.graph.omaSettingStringXml",
      "displayName": "AppLocker Script",
      "description": "Audit mode for scripts",
      "omaUri": "./Vendor/MSFT/AppLocker/ApplicationLaunchRestrictions/Native/Script/Policy",
      "secretReferenceValueId": null,
      "isEncrypted": false,
      "fileName": "AppLocker-Intune-Windows1121H2-Script-Audit.xml",
      "value@odata.type": "#Binary",
      "value": ""
    },
    {
      "@odata.type": "#microsoft.graph.omaSettingStringXml",
      "displayName": "AppLocker DLL",
      "description": "Audit mode for DLLs",
      "omaUri": "./Vendor/MSFT/AppLocker/ApplicationLaunchRestrictions/Native/DLL/Policy",
      "secretReferenceValueId": null,
      "isEncrypted": false,
      "fileName": "AppLocker-Intune-Windows1121H2-Dll-Audit.xml",
      "value@odata.type": "#Binary",
      "value": "PFJ1bGVDb2xsZWN0aW9uIFR5cGU9IkRsbCIgRW5mb3JjZW1lbnRNb2RlPSJBdWRpdE9ubHkiPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSIwNjQ1YTExNC1lNTVhLTRkOTUtOTUxMS01OTA1NDg5ODY3YzYiIE5hbWU9IkRpc2FsbG93IFBvd2VyU2hlbGwgdjIiIERlc2NyaXB0aW9uPSJFeHBsaWNpdGx5IGRlbnkgc2lnbmVkIERMTHMgbmVlZGVkIGZvciBQb3dlclNoZWxsIHYyIChpbXBsaWNpdGx5IGFsbG93IDEwLiogYW5kIGFib3ZlKSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iRGVueSI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVCAoUikgV0lORE9XUyAoUikgT1BFUkFUSU5HIFNZU1RFTSIgQmluYXJ5TmFtZT0iU1lTVEVNLk1BTkFHRU1FTlQuQVVUT01BVElPTi5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iOS45LjkuOSIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVBhdGhSdWxlIElkPSJmZTY0ZjU5Zi02ZmNhLTQ1ZTUtYTczMS0wZjY3MTUzMjdjMzgiIE5hbWU9IihEZWZhdWx0IFJ1bGUpIEFsbCBETExzIiBEZXNjcmlwdGlvbj0iQWxsb3dzIG1lbWJlcnMgb2YgdGhlIGxvY2FsIEFkbWluaXN0cmF0b3JzIGdyb3VwIHRvIGxvYWQgYWxsIERMTHMuIiBVc2VyT3JHcm91cFNpZD0iUy0xLTUtMzItNTQ0IiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQYXRoQ29uZGl0aW9uIFBhdGg9IioiIC8+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUGF0aFJ1bGU+CiAgICA8RmlsZVBhdGhSdWxlIElkPSI4NjBmMGZhNS1hZmQ5LTQ5MjktODgwYi1jZjBjNmYwNTJjNjciIE5hbWU9Ik1pY3Jvc29mdCBXaW5kb3dzIERMTHMiIERlc2NyaXB0aW9uPSJBbGxvd3MgbWVtYmVycyBvZiB0aGUgRXZlcnlvbmUgZ3JvdXAgdG8gbG9hZCBETExzIGxvY2F0ZWQgaW4gdGhlIFdpbmRvd3MgZm9sZGVyLiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVBhdGhDb25kaXRpb24gUGF0aD0iJVdJTkRJUiVcKiIgLz4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICAgICAgPEV4Y2VwdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUGF0aENvbmRpdGlvbiBQYXRoPSIlV0lORElSJVxkZWJ1Z1x3aWFcKiIgLz4KICAgICAgICAgICAgPEZpbGVQYXRoQ29uZGl0aW9uIFBhdGg9IiVXSU5ESVIlXGRlYnVnXHdpYToqIiAvPgogICAgICAgICAgICA8RmlsZVBhdGhDb25kaXRpb24gUGF0aD0iJVdJTkRJUiVccmVnaXN0cmF0aW9uXGNybWxvZ1wqIiAvPgogICAgICAgICAgICA8RmlsZVBhdGhDb25kaXRpb24gUGF0aD0iJVNZU1RFTTMyJVxtaWNyb3NvZnRcY3J5cHRvXHJzYVxtYWNoaW5la2V5c1wqIiAvPgogICAgICAgICAgICA8RmlsZVBhdGhDb25kaXRpb24gUGF0aD0iJVNZU1RFTTMyJVxtaWNyb3NvZnRcY3J5cHRvXHJzYVxtYWNoaW5la2V5czoqIiAvPgogICAgICAgICAgICA8RmlsZVBhdGhDb25kaXRpb24gUGF0aD0iJVNZU1RFTTMyJVxzcG9vbFxkcml2ZXJzXGNvbG9yXCoiIC8+CiAgICAgICAgICAgIDxGaWxlUGF0aENvbmRpdGlvbiBQYXRoPSIlU1lTVEVNMzIlXHRhc2tzXCoiIC8+CiAgICAgICAgICAgIDxGaWxlUGF0aENvbmRpdGlvbiBQYXRoPSIlU1lTVEVNMzIlXHRhc2tzX21pZ3JhdGVkXCoiIC8+CiAgICAgICAgICAgIDxGaWxlUGF0aENvbmRpdGlvbiBQYXRoPSIlV0lORElSJVx0YXNrc1wqIiAvPgogICAgICAgICAgICA8RmlsZVBhdGhDb25kaXRpb24gUGF0aD0iJVdJTkRJUiVcdHJhY2luZ1wqIiAvPgogICAgICAgICAgICA8RmlsZVBhdGhDb25kaXRpb24gUGF0aD0iJVdJTkRJUiVcdHJhY2luZzoqIiAvPgogICAgICAgIDwvRXhjZXB0aW9ucz4KICAgIDwvRmlsZVBhdGhSdWxlPgogICAgPEZpbGVQYXRoUnVsZSBJZD0iZTQzMWQwODAtYThlMy00OGQ2LTkwNGItMTliZGE5NWIzZmI3IiBOYW1lPSJBbGwgRExMcyBsb2NhdGVkIGluIHRoZSBQcm9ncmFtIEZpbGVzIGZvbGRlciIgRGVzY3JpcHRpb249IkFsbG93cyBtZW1iZXJzIG9mIHRoZSBFdmVyeW9uZSBncm91cCB0byBsb2FkIERMTHMgdGhhdCBhcmUgbG9jYXRlZCBpbiB0aGUgUHJvZ3JhbSBGaWxlcyBmb2xkZXIuIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUGF0aENvbmRpdGlvbiBQYXRoPSIlUFJPR1JBTUZJTEVTJVwqIiAvPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgICAgICA8RXhjZXB0aW9ucz4KICAgICAgICAgICAgPEZpbGVQYXRoQ29uZGl0aW9uIFBhdGg9IiVQUk9HUkFNRklMRVMlXG1pY3Jvc29mdFxlZGdlXGFwcGxpY2F0aW9uXHNldHVwbWV0cmljc1wqIiAvPgogICAgICAgIDwvRXhjZXB0aW9ucz4KICAgIDwvRmlsZVBhdGhSdWxlPgogICAgPEZpbGVQYXRoUnVsZSBJZD0iNGYzOWJmMTAtZjllYS00OWQ1LWJhMjYtNTU1MzViYTVmYjM1IiBOYW1lPSJEaXNhbGxvdyBQb3dlclNoZWxsIHYyIiBEZXNjcmlwdGlvbj0iRXhwbGljaXRseSBkZW55IHVuc2lnbmVkIEpJVCBuYXRpdmUgaW1hZ2VzIG5lZWRlZCBmb3IgUG93ZXJTaGVsbCB2MiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iRGVueSI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUGF0aENvbmRpdGlvbiBQYXRoPSIlV0lORElSJVxhc3NlbWJseVxOYXRpdmVJbWFnZXNfdjIuMC41MDcyN18zMlxTeXN0ZW0uTWFuYWdlbWVudC5BI1wqIiAvPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVBhdGhSdWxlPgogICAgPEZpbGVQYXRoUnVsZSBJZD0iMzFkMGExN2UtNDIwZi00Yjc5LTk1M2YtZDY4MWZkNjkyODlmIiBOYW1lPSJEaXNhbGxvdyBQb3dlclNoZWxsIHYyIiBEZXNjcmlwdGlvbj0iRXhwbGljaXRseSBkZW55IHVuc2lnbmVkIEpJVCBuYXRpdmUgaW1hZ2VzIG5lZWRlZCBmb3IgUG93ZXJTaGVsbCB2MiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iRGVueSI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUGF0aENvbmRpdGlvbiBQYXRoPSIlV0lORElSJVxhc3NlbWJseVxOYXRpdmVJbWFnZXNfdjIuMC41MDcyN182NFxTeXN0ZW0uTWFuYWdlbWVudC5BI1wqIiAvPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVBhdGhSdWxlPgogICAgPEZpbGVQYXRoUnVsZSBJZD0iMDQ0NWMwYmMtMGE0MC00M2Q5LTg3YmEtYTNmNmZmOTU3YjZhIiBOYW1lPSJBZGRpdGlvbmFsIGFsbG93ZWQgcGF0aDogJU9TRFJJVkUlXFByb2dyYW1EYXRhXE1pY3Jvc29mdFxXaW5kb3dzIERlZmVuZGVyXFBsYXRmb3JtXCoiIERlc2NyaXB0aW9uPSJBbGxvd3MgRXZlcnlvbmUgdG8gZXhlY3V0ZSBmcm9tICVPU0RSSVZFJVxQcm9ncmFtRGF0YVxNaWNyb3NvZnRcV2luZG93cyBEZWZlbmRlclxQbGF0Zm9ybVwqIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUGF0aENvbmRpdGlvbiBQYXRoPSIlT1NEUklWRSVcUHJvZ3JhbURhdGFcTWljcm9zb2Z0XFdpbmRvd3MgRGVmZW5kZXJcUGxhdGZvcm1cKiIgLz4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQYXRoUnVsZT4KICAgIDxGaWxlUGF0aFJ1bGUgSWQ9IjdlZTczMTExLTMyZDItNDYyNy05ZTBiLTZlODUyNmRlMTE0ZCIgTmFtZT0iQWRkaXRpb25hbCBhbGxvd2VkIHBhdGg6ICVPU0RSSVZFJVxQcm9ncmFtRGF0YVxNaWNyb3NvZnRcV2luZG93cyBEZWZlbmRlclxTY2Fuc1wqIiBEZXNjcmlwdGlvbj0iQWxsb3dzIEV2ZXJ5b25lIHRvIGV4ZWN1dGUgZnJvbSAlT1NEUklWRSVcUHJvZ3JhbURhdGFcTWljcm9zb2Z0XFdpbmRvd3MgRGVmZW5kZXJcU2NhbnNcKiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVBhdGhDb25kaXRpb24gUGF0aD0iJU9TRFJJVkUlXFByb2dyYW1EYXRhXE1pY3Jvc29mdFxXaW5kb3dzIERlZmVuZGVyXFNjYW5zXCoiIC8+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUGF0aFJ1bGU+CiAgICA8RmlsZVBhdGhSdWxlIElkPSJlMDU1ZTc5Ni03NGM3LTQwNWMtYTliMi05NzA3ODhmYTQzNmEiIE5hbWU9IkFkZGl0aW9uYWwgYWxsb3dlZCBwYXRoOiAlUFJPR1JBTUZJTEVTJVxNaWNyb3NvZnQgSW50dW5lIE1hbmFnZW1lbnQgRXh0ZW5zaW9uXENvbnRlbnRcKiIgRGVzY3JpcHRpb249IkFsbG93cyBFdmVyeW9uZSB0byBleGVjdXRlIGZyb20gJVBST0dSQU1GSUxFUyVcTWljcm9zb2Z0IEludHVuZSBNYW5hZ2VtZW50IEV4dGVuc2lvblxDb250ZW50XCoiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQYXRoQ29uZGl0aW9uIFBhdGg9IiVQUk9HUkFNRklMRVMlXE1pY3Jvc29mdCBJbnR1bmUgTWFuYWdlbWVudCBFeHRlbnNpb25cQ29udGVudFwqIiAvPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVBhdGhSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJhOWU2ZGJmZi00NThhLTQzNjQtYTgxZC04Yjg3YjAzMWZkNTYiIE5hbWU9Ik1pY3Jvc29mdCBEZWZlbmRlcjogTUlDUk9TT0ZUIE1BTFdBUkUgUFJPVEVDVElPTiIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVCBNQUxXQVJFIFBST1RFQ1RJT04mI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcUHJvZ3JhbURhdGFcTWljcm9zb2Z0XFdpbmRvd3MgRGVmZW5kZXJcUGxhdGZvcm0gQzpcUHJvZ3JhbURhdGFcTWljcm9zb2Z0XFdpbmRvd3MgRGVmZW5kZXJcU2NhbnMiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUIE1BTFdBUkUgUFJPVEVDVElPTiIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iNWRlYzg1ZWItZWMwOC00YmE0LTgzNDUtYzFkMjdmOTI4MmJmIiBOYW1lPSJNaWNyb3NvZnQgRGVmZW5kZXI6IE1QREVUT1VSUy5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTUlDUk9TT0ZUXFdJTkRPV1MgREVGRU5ERVJcUExBVEZPUk1cNC4xOC4yMjA3LjctMFxNUERFVE9VUlMuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNIiBCaW5hcnlOYW1lPSJNUERFVE9VUlMuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI4N2JkZWJlZi1hOTNiLTQ0MmMtODRkNS0wNGU3YmI5YTM1NzkiIE5hbWU9Ik1pY3Jvc29mdCBEZWZlbmRlcjogREVGRU5ERVJDU1AuRExMIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0mI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFBST0dSQU1EQVRBXE1JQ1JPU09GVFxXSU5ET1dTIERFRkVOREVSXFBMQVRGT1JNXDQuMTguMjIwNy43LTBcREVGRU5ERVJDU1AuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNIiBCaW5hcnlOYW1lPSJERUZFTkRFUkNTUC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjZmNjBmYzVmLTFlODYtNGZmMy05YTc2LWEwY2RiODYwNDU2MCIgTmFtZT0iTWljcm9zb2Z0IERlZmVuZGVyOiBNUENMSUVOVC5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTUlDUk9TT0ZUXFdJTkRPV1MgREVGRU5ERVJcUExBVEZPUk1cNC4xOC4yMjA3LjctMFxNUENMSUVOVC5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0iIEJpbmFyeU5hbWU9Ik1QQ0xJRU5ULkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iYmJmYmRjZWQtZjRjMC00YmVhLThhZjktNTZiN2M0MTIzNGYwIiBOYW1lPSJNaWNyb3NvZnQgRGVmZW5kZXI6IE1QVVBEQVRFLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxNSUNST1NPRlRcV0lORE9XUyBERUZFTkRFUlxQTEFURk9STVw0LjE4LjIyMDcuNy0wXE1QVVBEQVRFLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSIgQmluYXJ5TmFtZT0iTVBVUERBVEUuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJkNmVjYmRkNi0yODRhLTQwNDItYWRiOS02MDYwZThjNDk4ZWIiIE5hbWU9Ik1pY3Jvc29mdCBEZWZlbmRlcjogTVBTRU5TRUNPTU0uRExMIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0mI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFBST0dSQU1EQVRBXE1JQ1JPU09GVFxXSU5ET1dTIERFRkVOREVSXFBMQVRGT1JNXDQuMTguMjIwNy43LTBcTVBTRU5TRUNPTU0uRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNIiBCaW5hcnlOYW1lPSJNUFNFTlNFQ09NTS5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjIyMTBmZjJkLWNjMjAtNDcxMy1hMDRjLTE3NDI4ZGE2YjJkZCIgTmFtZT0iTWljcm9zb2Z0IERlZmVuZGVyOiBQUk9URUNUSU9OTUFOQUdFTUVOVC5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTUlDUk9TT0ZUXFdJTkRPV1MgREVGRU5ERVJcUExBVEZPUk1cNC4xOC4yMjA3LjctMFxQUk9URUNUSU9OTUFOQUdFTUVOVC5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0iIEJpbmFyeU5hbWU9IlBST1RFQ1RJT05NQU5BR0VNRU5ULkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iZmE4ZGQxOTgtOGI5ZS00ZTk1LThjN2UtNWJlNDViYTczYzg5IiBOYW1lPSJNaWNyb3NvZnQgRGVmZW5kZXI6IE1QU1ZDLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxNSUNST1NPRlRcV0lORE9XUyBERUZFTkRFUlxQTEFURk9STVw0LjE4LjIyMDcuNy0wXE1QU1ZDLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSIgQmluYXJ5TmFtZT0iTVBTVkMuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI3MTRiODQ3NC1kMWI3LTRhYmItYTkyMi04NDBkZjE0MjNlYWIiIE5hbWU9Ik1pY3Jvc29mdCBEZWZlbmRlcjogTVBPQVYuRExMIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0mI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFBST0dSQU1EQVRBXE1JQ1JPU09GVFxXSU5ET1dTIERFRkVOREVSXFBMQVRGT1JNXDQuMTguMjIwNy43LTBcTVBPQVYuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNIiBCaW5hcnlOYW1lPSJNUE9BVi5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImJjZGFlNTc2LTdlZDUtNDU5Ni05YTY0LWQzOTY1YjE3NjgwYiIgTmFtZT0iTWljcm9zb2Z0IERlZmVuZGVyOiBNUERFVE9VUlNDT1BZQUNDRUxFUkFUT1IuRExMIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0mI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFBST0dSQU1EQVRBXE1JQ1JPU09GVFxXSU5ET1dTIERFRkVOREVSXFBMQVRGT1JNXDQuMTguMjIwNy43LTBcTVBERVRPVVJTQ09QWUFDQ0VMRVJBVE9SLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSIgQmluYXJ5TmFtZT0iTVBERVRPVVJTQ09QWUFDQ0VMRVJBVE9SLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iZDc5ZTAwYTAtNjNiOC00MjgwLWJiNjYtYmU2NGZmMTM0ODhiIiBOYW1lPSJNaWNyb3NvZnQgRGVmZW5kZXI6IE1QQVNERVNDLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxNSUNST1NPRlRcV0lORE9XUyBERUZFTkRFUlxQTEFURk9STVw0LjE4LjIyMDcuNy0wXE1QQVNERVNDLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSIgQmluYXJ5TmFtZT0iTVBBU0RFU0MuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSIxNGE4MDYyNC03YTY0LTRiMTQtYjI5Ni05M2UyNmMzY2Y0ZGYiIE5hbWU9Ik1pY3Jvc29mdCBEZWZlbmRlcjogRU5EUE9JTlRETFAuRExMIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0mI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFBST0dSQU1EQVRBXE1JQ1JPU09GVFxXSU5ET1dTIERFRkVOREVSXFBMQVRGT1JNXDQuMTguMjIwNy43LTBcRU5EUE9JTlRETFAuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNIiBCaW5hcnlOYW1lPSJFTkRQT0lOVERMUC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjkxYmIyYjE3LWQ5OGQtNGQ2NS1iZGYwLWViMTYxMDRmZGQyMSIgTmFtZT0iTWljcm9zb2Z0IERlZmVuZGVyOiBNUEFaU1VCTUlULkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxNSUNST1NPRlRcV0lORE9XUyBERUZFTkRFUlxQTEFURk9STVw0LjE4LjIyMDcuNy0wXE1QQVpTVUJNSVQuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNIiBCaW5hcnlOYW1lPSJNUEFaU1VCTUlULkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iMGQ5ZTY4NDQtMzAzNC00M2I2LWJmYzktNDY3NGRiNjdmYzc0IiBOYW1lPSJNaWNyb3NvZnQgRGVmZW5kZXI6IE1QUlRQLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxNSUNST1NPRlRcV0lORE9XUyBERUZFTkRFUlxQTEFURk9STVw0LjE4LjIyMDcuNy0wXE1QUlRQLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSIgQmluYXJ5TmFtZT0iTVBSVFAuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJjMjdjOTljMC0zZGM3LTRhODItOGRmNi0wOGI2ZTIzOGRiMTAiIE5hbWU9Ik1pY3Jvc29mdCBEZWZlbmRlcjogTVBDT01NVS5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTUlDUk9TT0ZUXFdJTkRPV1MgREVGRU5ERVJcUExBVEZPUk1cNC4xOC4yMjA3LjctMFxNUENPTU1VLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSIgQmluYXJ5TmFtZT0iTVBDT01NVS5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImZkMmY5MGZkLTI5ZjMtNDg5Ny1iYjYzLTdlNTg3OWUwNjY3OCIgTmFtZT0iTWljcm9zb2Z0IERlZmVuZGVyOiBNUEVWTVNHLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxNSUNST1NPRlRcV0lORE9XUyBERUZFTkRFUlxQTEFURk9STVw0LjE4LjIyMDcuNy0wXE1QRVZNU0cuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNIiBCaW5hcnlOYW1lPSJNUEVWTVNHLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iMDZmNWYyZTItNDJkZC00YjI5LWFhZTAtNzA5MjkwMDMyMTA5IiBOYW1lPSJNaWNyb3NvZnQgRGVmZW5kZXI6IE1TTVBMSUNTLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxNSUNST1NPRlRcV0lORE9XUyBERUZFTkRFUlxQTEFURk9STVw0LjE4LjIyMDcuNy0wXE1TTVBMSUNTLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSIgQmluYXJ5TmFtZT0iTVNNUExJQ1MuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJjNzk0M2Y2NS03YjFlLTRmNzEtYWE0Ni00ZDQ1OWY1MWE4MTIiIE5hbWU9Ik1pY3Jvc29mdCBEZWZlbmRlcjogTVBVWEFHRU5ULkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxNSUNST1NPRlRcV0lORE9XUyBERUZFTkRFUlxQTEFURk9STVw0LjE4LjIyMDcuNy0wXE1QVVhBR0VOVC5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0iIEJpbmFyeU5hbWU9Ik1QVVhBR0VOVC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSIxZjMzNDM1Ny1kNDA3LTQyMmQtYmViZS0zZmIxMWFkNDAxNGEiIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogdmNhbXAxNDBfYXBwLmRsbCAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05cQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMjIuMTc2LjA4MjEuMDAwM1xWQ0FNUDE0MF9BUFAuRExMJiN4RDsmI3hBO1NpZ25lZCBieSBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMsIGJ1dCBtaXNzaW5nIHZlcnNpb24gaW5mb3JtYXRpb24iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHg4RkI4MkI2ODk0RDVFNDdCNTg3ODRFMzNFQkU0RDIxNTU3MjFFMDFEMzNEMzBDRTVBMTE4RjA2NjM5NTIyRUQwIiBTb3VyY2VGaWxlTmFtZT0idmNhbXAxNDBfYXBwLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iNDc1MTIiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSJjNGY5OTg0Yi05OWExLTQ5MWUtOWM2Zi03MTk0OWY0NTZhZTQiIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogY29uY3J0MTQwX2FwcC5kbGwgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDIyLjE3Ni4wODIxLjAwMDNcQ09OQ1JUMTQwX0FQUC5ETEwmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweEJDMDUwN0JEMEYxRTcwRDU0QkJGODE2OUZBNkQ2OUM4MUM0QTE0OTBENEZFRUQyNzIxMDAyQjJEN0Y3Mjk3MUMiIFNvdXJjZUZpbGVOYW1lPSJjb25jcnQxNDBfYXBwLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iNTg3NzYiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI1Y2UxZTNkMi1hNzE4LTQ5ODUtYjg4Zi03ZmI3Yjc5YWFhNzMiIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogRmlsZVN5bmNSTlVXUC5kbGwgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDIyLjE3Ni4wODIxLjAwMDNcRklMRVNZTkNSTlVXUC5ETEwmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDU4REZFNjY2RDI0RDVBQzgzMUI2QjI2MURDNzU4MzU3QjU3OTY1NjQyRDYzNzgzN0E1M0YwQUYzOENEOTM5QTciIFNvdXJjZUZpbGVOYW1lPSJGaWxlU3luY1JOVVdQLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iMzE1Mjg4IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iY2U0YmU5ZTEtZTJhOS00M2M5LWExZmItYjdhMTcxY2QxNTBlIiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IEZpbGVTeW5jUk5XaW4zMkxpYi5kbGwgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDIyLjE3Ni4wODIxLjAwMDNcRklMRVNZTkNSTldJTjMyTElCLkRMTCYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4MTM3OTQwN0Q5NTBBQjJGNTFBMUUwNEZFMjM5NUE4RTk5NEMzOEZCNzBDMDVDMkE0NkMwMTMzRTNBNTUxQUVCMSIgU291cmNlRmlsZU5hbWU9IkZpbGVTeW5jUk5XaW4zMkxpYi5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjY2NDU2IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iZDg4ZTc1Y2EtODcwYi00ZjIwLWE0NGQtMDM2ZThhYzNlZGNhIiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IHZjcnVudGltZTE0MF9hcHAuZGxsIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxPTkVEUklWRVwyMi4xNzYuMDgyMS4wMDAzXFZDUlVOVElNRTE0MF9BUFAuRExMJiN4RDsmI3hBO1NpZ25lZCBieSBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMsIGJ1dCBtaXNzaW5nIHZlcnNpb24gaW5mb3JtYXRpb24iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHhGRTMwREQ5MTk1RDAzNTY5OENGMThCM0QzN0M3NEY0MjQ4N0Y3RjQxNzEwMzFGOEVENzE0Q0FFMDREQkI4QTIxIiBTb3VyY2VGaWxlTmFtZT0idmNydW50aW1lMTQwX2FwcC5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjIzNDQwIiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iMDRhYzkyZjAtODc1YS00NmYyLTlmMDYtNmE0ZDY3NzU0NDNiIiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IHZjb21wMTQwX2FwcC5kbGwgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDIyLjE3Ni4wODIxLjAwMDNcVkNPTVAxNDBfQVBQLkRMTCYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4NDA4MzkxRjE0N0M3RkQwRjY4OTZCODNFREY4NUE2RUZGMzU0RjJDNEY5MUQ1ODdFMzJDQjg5Q0Y3NTlEMkU0NCIgU291cmNlRmlsZU5hbWU9InZjb21wMTQwX2FwcC5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjI2MDAwIiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iN2Y0ZjdhYzQtNjYwMi00Y2FhLWE5NGQtNjkyYTI2ZTZlMjFiIiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IHZjcnVudGltZTE0MF8xX2FwcC5kbGwgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDIyLjE3Ni4wODIxLjAwMDNcVkNSVU5USU1FMTQwXzFfQVBQLkRMTCYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4M0EyMzkwQkZFMjk2NkY2QzY5QjJGMzhGOTcwRDEwMTkxQTlDQTg4RTA0N0FENEU1N0M1NkE5ODU1N0FENTJGRSIgU291cmNlRmlsZU5hbWU9InZjcnVudGltZTE0MF8xX2FwcC5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjE5MzYwIiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iYzc3NWU3ZGEtYmI4NC00NzAzLTgwNDQtOTFlMDJlNGUzZGNkIiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IFJlYWN0TmF0aXZlUGlja2VyLmRsbCAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05cQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMjIuMTc2LjA4MjEuMDAwM1xSRUFDVE5BVElWRVBJQ0tFUi5ETEwmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDlFNTUxOUI2NjhCODA5QzM0OUZDOTI5RjE3M0I2NTZGMDE2RkNEMkU3NkFEQTRDN0NDQkIxMjAwQkRBMDlEMzAiIFNvdXJjZUZpbGVOYW1lPSJSZWFjdE5hdGl2ZVBpY2tlci5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjI0NDYxNiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjRlZTkxMzMxLTRjMTAtNGFkYi05NzMxLWU4MmI1ZTgwODczNiIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBtc3ZjcDE0MF8yX2FwcC5kbGwgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDIyLjE3Ni4wODIxLjAwMDNcTVNWQ1AxNDBfMl9BUFAuRExMJiN4RDsmI3hBO1NpZ25lZCBieSBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMsIGJ1dCBtaXNzaW5nIHZlcnNpb24gaW5mb3JtYXRpb24iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHg4NzNCQkM0NDUwNkE1RkM3NjAwMTFBODIwREUxNEE2OTQwNEE3QzM1NTkyMTBCOUQzNEU3QUEzMzgwREM1OTU4IiBTb3VyY2VGaWxlTmFtZT0ibXN2Y3AxNDBfMl9hcHAuZGxsIiBTb3VyY2VGaWxlTGVuZ3RoPSIyMTkxMiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjE3OWU5ZTg4LTU2ZDMtNDNjYi04MDIwLTgxOGE0NDk4ZjJjYiIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiB2Y2NvcmxpYjE0MF9hcHAuZGxsIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxPTkVEUklWRVwyMi4xNzYuMDgyMS4wMDAzXFZDQ09STElCMTQwX0FQUC5ETEwmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDQ4ODc2QjZCNjQ1NTFDQzBCMTNFMTMzQTNBODdFMjhBQzFFQTNDQTBGNDBBOTFGMjMzQzI2OTZFRDlBRjEwNjMiIFNvdXJjZUZpbGVOYW1lPSJ2Y2NvcmxpYjE0MF9hcHAuZGxsIiBTb3VyY2VGaWxlTGVuZ3RoPSI1MTU5MiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9ImFjZjI1NmY1LWRkOWQtNGQ4Yy1hMDdmLTFhMzU4MjU4ZTA5MyIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBtc3ZjcDE0MF9hcHAuZGxsIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxPTkVEUklWRVwyMi4xNzYuMDgyMS4wMDAzXE1TVkNQMTQwX0FQUC5ETEwmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDgzMUYwNDExNDA3QjY4MzBFMEQxQzRDRDFDNzVCNzZBOEJFMzdFQzUwRUM0QjgyNEI4MTMxQ0I1NEU5OUFBMjciIFNvdXJjZUZpbGVOYW1lPSJtc3ZjcDE0MF9hcHAuZGxsIiBTb3VyY2VGaWxlTGVuZ3RoPSIyNjA1MDQiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI1ZDRjZjgxMi0xNDViLTQ1NDAtYjNmNS0zY2M2NzFhOTgwY2UiIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogbXN2Y3AxNDBfMV9hcHAuZGxsIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxPTkVEUklWRVwyMi4xNzYuMDgyMS4wMDAzXE1TVkNQMTQwXzFfQVBQLkRMTCYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4NUZCMDE1NEY2M0E0QTFGOUM5MDQ4MkI3QjlDOTYwRjAwNDAzMzA5QzM1Qjc5M0E4MENCNzc5QzlDNDVCMzAxMSIgU291cmNlRmlsZU5hbWU9Im1zdmNwMTQwXzFfYXBwLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iMTk4NDgiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI2MTYwY2Q2Mi01ODQ1LTRlOTgtODJiOC0yNTk1MjZmNGY5OTciIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogTWljcm9zb2Z0LlRvb2xraXQuV2luMzIuVUkuWGFtbEhvc3QuZGxsIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxPTkVEUklWRVwyMi4xNzYuMDgyMS4wMDAzXE1JQ1JPU09GVC5UT09MS0lULldJTjMyLlVJLlhBTUxIT1NULkRMTCYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4MUFENTQ4NzNBRjU0MDZFQkJFODIxOUExODg0MTkzNEQzNzE0ODVEQzkxRDcxMUQxQjkwRTk5NTAzODcwMDU2NSIgU291cmNlRmlsZU5hbWU9Ik1pY3Jvc29mdC5Ub29sa2l0LldpbjMyLlVJLlhhbWxIb3N0LmRsbCIgU291cmNlRmlsZUxlbmd0aD0iMTEyMDI0IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI1NTMxNGEzOC1kOTE3LTRlMGYtOWI3My05ZTk5MGVkMTQ3NDMiIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogTUlDUk9TT0ZULkFJUC5QREZQUk9URUNUT1IiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlQuQUlQLlBERlBST1RFQ1RPUiYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluOiBDOlxVc2Vyc1xhYXJvblxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxPbmVEcml2ZSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlQuQUlQLlBERlBST1RFQ1RPUiIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iMzkwMzc3YzktNmU1MS00ZWVlLWE3ZWEtY2IwOThhYWNhNDc0IiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IE1JQ1JPU09GVCBFREdFIEVNQkVEREVEIEJST1dTRVIgV0VCVklFVyBMT0FERVIiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlQgRURHRSBFTUJFRERFRCBCUk9XU0VSIFdFQlZJRVcgTE9BREVSJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXGFhcm9uXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XE9uZURyaXZlIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVCBFREdFIEVNQkVEREVEIEJST1dTRVIgV0VCVklFVyBMT0FERVIiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9Ijg0ODk3ZDAyLWRmZDYtNDAxYy05MWU0LTkxNzk1MjhkOGQ1NiIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBNSUNST1NPRlQuT0ZGSUNFLklSTS5NU09QUk9URUNUT1IiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlQuT0ZGSUNFLklSTS5NU09QUk9URUNUT1ImI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcT25lRHJpdmUiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZULk9GRklDRS5JUk0uTVNPUFJPVEVDVE9SIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI2OTJhZTk2ZS1jNzBjLTQ5MjctOWYyNC0zODdhOGI1ZGM0YzciIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogTElCR0xFU1YyIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTElCR0xFU1YyJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXGFhcm9uXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XE9uZURyaXZlIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9IkxJQkdMRVNWMiIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iNDkzYTdkMjYtZmJjMy00NDNjLTkzMGItZTZmYzMyNjY0YTVjIiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IE1JQ1JPU09GVMKpIEFEQUwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCqSBBREFMJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXGFhcm9uXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XE9uZURyaXZlIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKpIEFEQUwiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjgwOGZlYjQ2LWM0ZDQtNDc4NC04YzAyLTYxNjI5NzNmYmJkZCIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBNSUNST1NPRlQgU0hBUkVQT0lOVCBXRUIgU09DS0VUIENMSUVOVCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVCBTSEFSRVBPSU5UIFdFQiBTT0NLRVQgQ0xJRU5UJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXGFhcm9uXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XE9uZURyaXZlIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVCBTSEFSRVBPSU5UIFdFQiBTT0NLRVQgQ0xJRU5UIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI4MDAyYTExNC1iMjJjLTRmNWEtOWFiZS1jYzZjOTY5MWEwZDIiIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogTUlDUk9TT0ZUIE9ORURSSVZFIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUIE9ORURSSVZFJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXGFhcm9uXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XE9uZURyaXZlIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVCBPTkVEUklWRSIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iZjMwMDAzNjctMmUxNi00NmI3LTgzOGEtZTAwZTY3YzMxYjE1IiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IE1TVkNQMTQwLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcVVNFUlNcQUFST05cQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMjIuMTc2LjA4MjEuMDAwM1xNU1ZDUDE0MC5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIiBCaW5hcnlOYW1lPSJNU1ZDUDE0MC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImM0NDlkNTU0LTU3NTItNGEwNS1hNTZhLWIzYmYwNWFiZDdmMCIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBNU1ZDUDE0MF8xLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcVVNFUlNcQUFST05cQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMjIuMTc2LjA4MjEuMDAwM1xNU1ZDUDE0MF8xLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4iIEJpbmFyeU5hbWU9Ik1TVkNQMTQwXzEuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSIzYjIzZDlhNi0xYzVhLTQ0ZGQtYTMyOS01ZTU0M2Q3YzJlNjUiIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogTUlDUk9TT0ZUIFNIQVJFUE9JTlQgQ0FMQyBMSUJSQVJZIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUIFNIQVJFUE9JTlQgQ0FMQyBMSUJSQVJZJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXGFhcm9uXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XE9uZURyaXZlIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVCBTSEFSRVBPSU5UIENBTEMgTElCUkFSWSIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iMTM4MjNhYTctYzVkMS00ZjhhLTg2MGEtZTJlZDc5MzIxM2JlIiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IFRIRSBPUEVOU1NMIFRPT0xLSVQiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBUSEUgT1BFTlNTTCBUT09MS0lUJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXGFhcm9uXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XE9uZURyaXZlIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9IlRIRSBPUEVOU1NMIFRPT0xLSVQiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImJjMjc2OTk1LTQ1MjYtNDgxMS1hNzA3LTEzYWRjZjg5NmE2MiIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBNU1ZDUDE0MF9BVE9NSUNfV0FJVC5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4mI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFVTRVJTXEFBUk9OXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDIyLjE3Ni4wODIxLjAwMDNcTVNWQ1AxNDBfQVRPTUlDX1dBSVQuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriIgQmluYXJ5TmFtZT0iTVNWQ1AxNDBfQVRPTUlDX1dBSVQuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSIxMmYyMjBlNy1kYTZjLTRkZTgtYWQyZi05OWZhNjZlNTFmOTUiIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogTUlDUk9TT0ZUIEFEIFJNUyIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVCBBRCBSTVMmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcT25lRHJpdmUiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUIEFEIFJNUyIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iMGE2ZGY1Y2UtM2JjNy00ODkxLWE2MGEtMTE4MzA1NGY4YjljIiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IFJFQUNULU5BVElWRS1XSU5ET1dTIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogUkVBQ1QtTkFUSVZFLVdJTkRPV1MmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcT25lRHJpdmUiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iUkVBQ1QtTkFUSVZFLVdJTkRPV1MiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjI5NjdiYWU0LWJlZjctNDNkOS1iYmJhLTRiNmNmODhmZWM5ZiIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBWQ1JVTlRJTUUxNDAuRExMIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxPTkVEUklWRVwyMi4xNzYuMDgyMS4wMDAzXFZDUlVOVElNRTE0MC5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIiBCaW5hcnlOYW1lPSJWQ1JVTlRJTUUxNDAuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJlYzFlMGUxOS0zZGNmLTQ5YTAtOTc4NC1hY2Q3OGZjYjI2ZDQiIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogTUlDUk9TT0ZULk9GRklDRS5JUk0uT0ZDUFJPVEVDVE9SIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZULk9GRklDRS5JUk0uT0ZDUFJPVEVDVE9SJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXGFhcm9uXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XE9uZURyaXZlIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVC5PRkZJQ0UuSVJNLk9GQ1BST1RFQ1RPUiIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iYjJjOTYwOTYtYzEyOC00OWY3LWFhNTgtY2Y0ZGI0MWM3ZmNkIiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IE1JQ1JPU09GVCBTSEFSRVBPSU5UIEhUVFAgU0VSVkVSIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUIFNIQVJFUE9JTlQgSFRUUCBTRVJWRVImI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcT25lRHJpdmUiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUIFNIQVJFUE9JTlQgSFRUUCBTRVJWRVIiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjhiMjE5ODQxLTBmMTUtNGE1Mi1hNjIyLTRkMjlmMzQ2Mjg3MiIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBIRVJNRVMgSkFWQVNDUklQVCBFTkdJTkUiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBIRVJNRVMgSkFWQVNDUklQVCBFTkdJTkUmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcT25lRHJpdmUiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iSEVSTUVTIEpBVkFTQ1JJUFQgRU5HSU5FIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJhZGE1MjgyMi0zOGVhLTRkMTQtOWIxZC03MDgyOGEzYjBjYjMiIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogTUlDUk9TT0ZUIFNIQVJFUE9JTlQiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlQgU0hBUkVQT0lOVCYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluOiBDOlxVc2Vyc1xhYXJvblxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxPbmVEcml2ZSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlQgU0hBUkVQT0lOVCIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iZDZjOThlODgtNDM1Mi00ZjMyLTkwOGQtNzdlNzc3OTViYTI5IiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IFZDUlVOVElNRTE0MF8xLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcVVNFUlNcQUFST05cQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMjIuMTc2LjA4MjEuMDAwM1xWQ1JVTlRJTUUxNDBfMS5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIiBCaW5hcnlOYW1lPSJWQ1JVTlRJTUUxNDBfMS5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjZiMjFmZDZmLTA1NjktNDFhYy04MGIyLTU4NmQ1MWI4ZTgwMiIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBVQ1JUQkFTRS5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcVVNFUlNcQUFST05cQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMjIuMTc2LjA4MjEuMDAwM1xVQ1JUQkFTRS5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0iIEJpbmFyeU5hbWU9IlVDUlRCQVNFLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iZGM0NGE5MTMtMzRjMC00MzA3LWE3NjgtNzU2NDZjNzMxMTEyIiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IExJQkVHTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IExJQkVHTCYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluOiBDOlxVc2Vyc1xhYXJvblxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxPbmVEcml2ZSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJMSUJFR0wiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjY2OGM5MzJiLTIxYjYtNGUzZS05ZTVhLTk3MzU3NjhjYjA5MyIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBRVDUiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBRVDUmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcT25lRHJpdmUiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iUVQ1IiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI3NjM5YjliNi0yNGIxLTRlMzYtOTZlZC05NDYzNmQwMWYyMzUiIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogQVBJU0VUU1RVQiIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxPTkVEUklWRVwyMi4xNzYuMDgyMS4wMDAzXEFQSS1NUy1XSU4tQ09SRS1DT05TT0xFLUwxLTEtMC5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0iIEJpbmFyeU5hbWU9IkFQSVNFVFNUVUIiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImEyODMwMTk1LTBhMTQtNGNhMy1iZWMyLWMxODYxYThlYjQ3ZSIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBNSUNST1NPRlQuVUkuWEFNTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVC5VSS5YQU1MJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXGFhcm9uXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XE9uZURyaXZlIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVC5VSS5YQU1MIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iMDkzNGQyZTctYmUxMC00NWFmLWIyMDAtNmMzMTk5MDdiNWYyIiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IG1vZGVybi1vc3V0aWxzLm5vZGUgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXFRFQU1TXENVUlJFTlRcUkVTT1VSQ0VTXEFQUC5BU0FSLlVOUEFDS0VEXE5PREVfTU9EVUxFU1xNT0RFUk4tT1NVVElMU1xCVUlMRFxSRUxFQVNFXE1PREVSTi1PU1VUSUxTLk5PREUmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDI4NTEzOTVCQzA3NTUwREUwMzVGOEVCNUYwQzU1M0YxQUJBNUM5NEE0QkU1RDBBREM1RTU5MzVDNUIyMTcxQzUiIFNvdXJjZUZpbGVOYW1lPSJtb2Rlcm4tb3N1dGlscy5ub2RlIiBTb3VyY2VGaWxlTGVuZ3RoPSI0MjQyODgiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI1Mzc4MTFhNy03ZjcwLTQzMGYtOTgwNi02NjA2ZWI1OTcwNGUiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogTWljcm9zb2Z0LkFwcGxpY2F0aW9ucy5UZWxlbWV0cnkuV2luZG93cy5kbGwgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXFRFQU1TXENVUlJFTlRcUkVTT1VSQ0VTXE1FRVRJTkctQURESU5cMS4wLjIyMDYyLjFcWDY0XE1JQ1JPU09GVC5BUFBMSUNBVElPTlMuVEVMRU1FVFJZLldJTkRPV1MuRExMJiN4RDsmI3hBO1NpZ25lZCBieSBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMsIGJ1dCBtaXNzaW5nIHZlcnNpb24gaW5mb3JtYXRpb24iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHhDRjdDNTQzNEUzQkE0N0VDQzZGRTJFRkU3MjkwQkU3MjVFNjRDNDE0QkQxQzk2MTkyRjExOEIwQkEzRTcwNUUzIiBTb3VyY2VGaWxlTmFtZT0iTWljcm9zb2Z0LkFwcGxpY2F0aW9ucy5UZWxlbWV0cnkuV2luZG93cy5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjMwOTc0NDAiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSJlMzY3ODU1Yi05NGRmLTQ0YjAtYTJmNS0wYjQwYTc4NzcwNGQiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogb2ZmaWNlLWludC13aW4ubm9kZSAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05cQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcVEVBTVNcQ1VSUkVOVFxSRVNPVVJDRVNcQVBQLkFTQVIuVU5QQUNLRURcTk9ERV9NT0RVTEVTXE9GRklDRS1JTlQtV0lOXEJVSUxEXFJFTEVBU0VcT0ZGSUNFLUlOVC1XSU4uTk9ERSYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4MkYzQkMxNjEwQ0Q1OEZCNDJEMzdFMjA4NzM2RjNDMjRFNzU4RTdFODUzMTA0MjU2REQzM0VDQ0YzNjUyQ0JCMSIgU291cmNlRmlsZU5hbWU9Im9mZmljZS1pbnQtd2luLm5vZGUiIFNvdXJjZUZpbGVMZW5ndGg9Ijg3NDg0OCIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9ImMyOGM0ZjcxLWM3YmMtNDZkYy1iYjQ1LWYyMmQ2MjI1OGZlZiIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBhZGFsLXdpbi5ub2RlIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xBUFAuQVNBUi5VTlBBQ0tFRFxOT0RFX01PRFVMRVNcQURBTDM0LVdJTlxCVUlMRFxSRUxFQVNFXEFEQUwtV0lOLk5PREUmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDdGQ0UwQzA2ODkyN0MzQjJBMTY2MjQxODA5RjA5NDY1RUJCN0NEOTZDRDdBQTE4Q0I0NzlDQkUxQUYwNUNCNTgiIFNvdXJjZUZpbGVOYW1lPSJhZGFsLXdpbi5ub2RlIiBTb3VyY2VGaWxlTGVuZ3RoPSIxMzY1NDQiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSIxMWMyMDRlMC1iY2M4LTRjM2ItODFhZi0yZTZkNDExNzhkOWEiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogcnRtYndlLmRsbCAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05cQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcVEVBTVNcQ1VSUkVOVFxSRVNPVVJDRVNcQVBQLkFTQVIuVU5QQUNLRURcTk9ERV9NT0RVTEVTXFNMSU1DT1JFXEJJTlxSVE1CV0UuRExMJiN4RDsmI3hBO1NpZ25lZCBieSBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMsIGJ1dCBtaXNzaW5nIHZlcnNpb24gaW5mb3JtYXRpb24iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHg4ODlBREI0NDg5MjMwQjVBMDkwMTE2RUZBNjRGRTY0QjA2NTcwQTY5RjRDOTU4ODUxRjZEQUU5MTc2QUNDQzJCIiBTb3VyY2VGaWxlTmFtZT0icnRtYndlLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iMjA2MTc2IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iNjE0YjU2NTQtZWJlNC00MWI1LTk4ODYtMWExNjE1ZTNmMWNhIiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IHJlZ2lzdHJ5LXV0aWxzLm5vZGUgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXFRFQU1TXENVUlJFTlRcUkVTT1VSQ0VTXEFQUC5BU0FSLlVOUEFDS0VEXE5PREVfTU9EVUxFU1xSRUdJU1RSWS1VVElMU1xCVUlMRFxSRUxFQVNFXFJFR0lTVFJZLVVUSUxTLk5PREUmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDc0OTYxRjA2NzU3OEM2MDU4REFEMzE3MzRCOENBNDJBMzgwQ0U3RDg2RDJDM0EzOTRDQzI0RThGQTFEMkNFRjciIFNvdXJjZUZpbGVOYW1lPSJyZWdpc3RyeS11dGlscy5ub2RlIiBTb3VyY2VGaWxlTGVuZ3RoPSIyMTM4NTYiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI3ZmFkYWM2ZS1hMDhjLTRmZWEtOTM0My05NmI1NTdhYzRiZDgiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogdnVsa2FuLTEuZGxsIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFZVTEtBTi0xLkRMTCYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4OTI2REFGREM5NzEzRURFNjc2QkUyNEVGRTg1NEZBMzkxMzg0MTE3NkU5QUVBNEJCRjkwMTI0MEFBMThFNzBDQSIgU291cmNlRmlsZU5hbWU9InZ1bGthbi0xLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iNzI5NDQwIiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iZWUwZTY4ZTUtNzAzMS00ZWZjLWJiM2QtNTFlODI4YjdjNDY2IiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IG1lZGlhLWhpZC5ub2RlIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xBUFAuQVNBUi5VTlBBQ0tFRFxOT0RFX01PRFVMRVNcTUVESUEtSElEXEJVSUxEXFJFTEVBU0VcTUVESUEtSElELk5PREUmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweEQ4ODk2OEVEOTIwNUNCRDhFQUQwQUE1MjMwRTlGMzlENTI3M0ZEQjI3NDNFMjYyNDQ2NTkzMzIxNDQ5MzhGMEIiIFNvdXJjZUZpbGVOYW1lPSJtZWRpYS1oaWQubm9kZSIgU291cmNlRmlsZUxlbmd0aD0iOTgxODU2IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iZTI4ODY3ODctM2NjMy00MmZiLTg1YmQtZDM3NjgzMDM2Y2Y3IiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IG5vdGlmaWNhdGlvbnNfYmluZGluZ3Mubm9kZSAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05cQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcVEVBTVNcQ1VSUkVOVFxSRVNPVVJDRVNcQVBQLkFTQVIuVU5QQUNLRURcTk9ERV9NT0RVTEVTXEBNSUNST1NPRlRcRUxFQ1RST04tV0lORE9XUy1JTlRFUkFDVElWRS1OT1RJRklDQVRJT05TXEJVSUxEXFJFTEVBU0VcTk9USUZJQ0FUSU9OU19CSU5ESU5HUy5OT0RFJiN4RDsmI3hBO1NpZ25lZCBieSBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMsIGJ1dCBtaXNzaW5nIHZlcnNpb24gaW5mb3JtYXRpb24iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHhBQjQyOUJBNEZCRkI2NjU2MTUwODM4Qjc0MTU4NzUxODcwODkzMkM4MkFBQUEzRjc5QTRCRUFCMURENkJBOTJCIiBTb3VyY2VGaWxlTmFtZT0ibm90aWZpY2F0aW9uc19iaW5kaW5ncy5ub2RlIiBTb3VyY2VGaWxlTGVuZ3RoPSI0NDM4NCIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjY3MzlhYTZlLTFhN2QtNDExNS05ZmMzLWU4NDlkODRlNjJkOCIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBjYWxsX21hbmFnZXIubm9kZSAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05cQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcVEVBTVNcQ1VSUkVOVFxSRVNPVVJDRVNcQVBQLkFTQVIuVU5QQUNLRURcTk9ERV9NT0RVTEVTXEBTS1lQRVxDQUxMLU1BTkFHRVJcQlVJTERcUkVMRUFTRVxDQUxMX01BTkFHRVIuTk9ERSYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4MDkyQjQ5QzJCNDBGMUFCREYwRkE2NjREQ0FGOEVBNzM1QjUxRUZCMTAyMDlFNTVCQ0NGNzc5MTI5RTQ2OTM0MSIgU291cmNlRmlsZU5hbWU9ImNhbGxfbWFuYWdlci5ub2RlIiBTb3VyY2VGaWxlTGVuZ3RoPSIxMjk2MjI0IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iNTU1ZDkxMGMtODNjNS00ODQ1LTlmZDUtODVhNDA2MzI3MTYyIiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IE9uZUF1dGguZGxsIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xNRUVUSU5HLUFERElOXDEuMC4yMjA2Mi4xXFg2NFxPTkVBVVRILkRMTCYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4MTdENTQ0RTczNEYzOTUyRjNCMEJGN0UzNzQ3NERBRUZCRUY5OTVCRkNFMzgwMkE2NjhEMjJGQTg2QjI3QzFBNSIgU291cmNlRmlsZU5hbWU9Ik9uZUF1dGguZGxsIiBTb3VyY2VGaWxlTGVuZ3RoPSIzODM4MzA0IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iYzM0MWQ4MjEtMWM2ZS00MjFhLWFmNzUtMTExYjJkY2ViNjZhIiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IGZmbXBlZy5kbGwgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXFRFQU1TXENVUlJFTlRcRkZNUEVHLkRMTCYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4MUQ2REQxQ0JCOEI4N0NFNDFFREI3NjIyRjY4MjVBMzBGOUREMzgyMjMxMTc0MzM4Q0U4MUQ5Qjc3NjUyRDlGOCIgU291cmNlRmlsZU5hbWU9ImZmbXBlZy5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjI4MzkyODgiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI4OGE5YWY4NC0yYmYyLTQ0ODMtYTBmZS02ZmYxYzk2NWVhOGMiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczoga2V5dGFyLm5vZGUgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXFRFQU1TXENVUlJFTlRcUkVTT1VSQ0VTXEFQUC5BU0FSLlVOUEFDS0VEXE5PREVfTU9EVUxFU1xLRVlUQVI0XEJVSUxEXFJFTEVBU0VcS0VZVEFSLk5PREUmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweEMzOEI5NEJDQ0Y0MTk1QUVFNEE2RDU3ODkxMUExOTRDNjZBOENCMzA5QjJDOTBEOEEwRDdBNkE0ODk1MUIwQzYiIFNvdXJjZUZpbGVOYW1lPSJrZXl0YXIubm9kZSIgU291cmNlRmlsZUxlbmd0aD0iMzc0MDA4IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iZTNjNTA4NGQtY2Q2OS00NTE0LTkxNzEtYjM4ZDljMTNjYTBlIiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IGtleWJvYXJkLWxheW91dC1tYW5hZ2VyLm5vZGUgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXFRFQU1TXENVUlJFTlRcUkVTT1VSQ0VTXEFQUC5BU0FSLlVOUEFDS0VEXE5PREVfTU9EVUxFU1xLRVlCT0FSRC1MQVlPVVRcQlVJTERcUkVMRUFTRVxLRVlCT0FSRC1MQVlPVVQtTUFOQUdFUi5OT0RFJiN4RDsmI3hBO1NpZ25lZCBieSBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMsIGJ1dCBtaXNzaW5nIHZlcnNpb24gaW5mb3JtYXRpb24iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHhBNDJGNzhGNjE2QzEzNEI1RTIxQ0VBNjM2QTIyMjI5OTc2RjhEMjI0QzM0QkREOUMxNTZDQkFCNTE2RjQ4MEE3IiBTb3VyY2VGaWxlTmFtZT0ia2V5Ym9hcmQtbGF5b3V0LW1hbmFnZXIubm9kZSIgU291cmNlRmlsZUxlbmd0aD0iMTkzMjcyIiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iMDMyZmFjMDEtNDUyZC00NGVhLTljYjItNmU2Y2E3MDMwNzE4IiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IE9uZUF1dGguZGxsIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xNRUVUSU5HLUFERElOXDEuMC4yMjA2Mi4xXFg4NlxPTkVBVVRILkRMTCYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4RkY4MDlGNjRDM0M1ODI4MTk5OUJDMzIyRkM4NjM3MDNCNkQyNUM0RjQxMzVENTFCQUM3MDI0MTI0QUE5OTU4QyIgU291cmNlRmlsZU5hbWU9Ik9uZUF1dGguZGxsIiBTb3VyY2VGaWxlTGVuZ3RoPSIzNDkyNjU2IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iZjQyNDFmNDAtMzYzZS00MGRlLWE1MjAtYmVjM2I1NjQ4ZTE1IiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IG5hdGl2ZS11dGlscy5ub2RlIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xBUFAuQVNBUi5VTlBBQ0tFRFxOT0RFX01PRFVMRVNcTkFUSVZFLVVUSUxTLVYyXEJVSUxEXFJFTEVBU0VcTkFUSVZFLVVUSUxTLk5PREUmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweENFMkU2NkE5QjRCMTk2RjBERTJDNDJGQzI3RDRFNUUxMzMxNDBFRDVBRTIwMjYyREY1NUJERTNGQjcwQ0UzMzEiIFNvdXJjZUZpbGVOYW1lPSJuYXRpdmUtdXRpbHMubm9kZSIgU291cmNlRmlsZUxlbmd0aD0iMjUzMjgwIiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iZTIwODBkOGYtNzZmMC00YjMzLTgxY2MtYjQxNGYxNGVhMjQ1IiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IE9uZUF1dGguZGxsIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU01FRVRJTkdBRERJTlwxLjAuMjIyMDkuNFxYNjRcT05FQVVUSC5ETEwmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweEE3MDlFNUIyMzhGNTAxMTc3OTk3NTM0RDFCMEMwMzgwNTlBODFBMjAxN0Q1RTM0MUU0RjVCQjQ4NDJFREUzQUQiIFNvdXJjZUZpbGVOYW1lPSJPbmVBdXRoLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iMzgzODI0OCIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjVjNGJjZjAyLTY4M2ItNDFlMy05NWFlLTMxNTYyNmFiMTBiZSIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBPbmVBdXRoLmRsbCAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05cQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcVEVBTVNNRUVUSU5HQURESU5cMS4wLjIyMjA5LjRcWDg2XE9ORUFVVEguRExMJiN4RDsmI3hBO1NpZ25lZCBieSBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMsIGJ1dCBtaXNzaW5nIHZlcnNpb24gaW5mb3JtYXRpb24iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHg4NUZEQjMwMjVGMkIzQTg5MzMxRkNERkI3MDNBNTI1OTE4NTczRERBNjZCM0VBQkY0NjNBQzNCREYzNDIxNzRBIiBTb3VyY2VGaWxlTmFtZT0iT25lQXV0aC5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjM0OTIxMzYiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI4ZGZiNTJjYS0yMDc1LTQxZGEtYWFlMS05MWIwNTJhMGE0NTciIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogb25lYXV0aC5ub2RlIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xBUFAuQVNBUi5VTlBBQ0tFRFxOT0RFX01PRFVMRVNcT05FQVVUSFxMSUJcT05FQVVUSC5OT0RFJiN4RDsmI3hBO1NpZ25lZCBieSBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMsIGJ1dCBtaXNzaW5nIHZlcnNpb24gaW5mb3JtYXRpb24iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHg5MjRBMjUyNUI0RkNFNjJGMzZFMkZEQkM4NjA5NUU1QjU1Q0Y3RkNGRDdEQkRBOEMyNzc1OTQ1OTI0RkE5MUI0IiBTb3VyY2VGaWxlTmFtZT0ib25lYXV0aC5ub2RlIiBTb3VyY2VGaWxlTGVuZ3RoPSIzNzE2OTYwIiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iZDhmZTk0NzgtNTMwYy00Y2VlLWIwMWQtMDM2OGZiYzI3NGFhIiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IEludGVyYWN0aXZlTm90aWZpY2F0aW9ucy5kbGwgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXFRFQU1TXENVUlJFTlRcUkVTT1VSQ0VTXEFQUC5BU0FSLlVOUEFDS0VEXE5PREVfTU9EVUxFU1xATUlDUk9TT0ZUXEVMRUNUUk9OLVdJTkRPV1MtSU5URVJBQ1RJVkUtTk9USUZJQ0FUSU9OU1xCVUlMRFxSRUxFQVNFXElOVEVSQUNUSVZFTk9USUZJQ0FUSU9OUy5ETEwmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDRDMzcwMTIwRjM2RjgzOTNGN0JGQjZDOUY5REE5QkJGOEI1MUM4M0VDQjkxN0JENjg5QTEyQjgyQThGRDM3NUIiIFNvdXJjZUZpbGVOYW1lPSJJbnRlcmFjdGl2ZU5vdGlmaWNhdGlvbnMuZGxsIiBTb3VyY2VGaWxlTGVuZ3RoPSIxMjU3NjgiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSJmYjMxODc2Zi03ZjNhLTRiZGMtYWI2MS04MjA0NzZlNjRlMDAiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogbm9kZS1sb2NhbGUtaW5mby1wcm92aWRlci5ub2RlIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xBUFAuQVNBUi5VTlBBQ0tFRFxOT0RFX01PRFVMRVNcQE1TVEVBTVNcTk9ERS1MT0NBTEUtSU5GTy1QUk9WSURFUlxCVUlMRFxSRUxFQVNFXE5PREUtTE9DQUxFLUlORk8tUFJPVklERVIuTk9ERSYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4NTdCNDNFNzVFOTEwNUI5RkVCOTEzODQ5NTBBNzRCQ0VCOUJGQjQwRjZDM0YyQkM3MkE4RDIzRDAzOTEzOEEwRCIgU291cmNlRmlsZU5hbWU9Im5vZGUtbG9jYWxlLWluZm8tcHJvdmlkZXIubm9kZSIgU291cmNlRmlsZUxlbmd0aD0iNDY4MzIwIiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iN2RkYjgwYzAtMDc5YS00NTUxLThkOTYtNzYyZjA2MGUzODhhIiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IE1pY3Jvc29mdC5BcHBsaWNhdGlvbnMuVGVsZW1ldHJ5LldpbmRvd3MuZGxsIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xNRUVUSU5HLUFERElOXDEuMC4yMjA2Mi4xXFg4NlxNSUNST1NPRlQuQVBQTElDQVRJT05TLlRFTEVNRVRSWS5XSU5ET1dTLkRMTCYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4NDI1Njk0Nzg1NkEyQ0RFMTA4RDNCQzk3MUU3MzZCNzU3QUNBQzQ5RkFBM0REMjI3MEQ3OTJCMEUxMDlGRjkwQSIgU291cmNlRmlsZU5hbWU9Ik1pY3Jvc29mdC5BcHBsaWNhdGlvbnMuVGVsZW1ldHJ5LldpbmRvd3MuZGxsIiBTb3VyY2VGaWxlTGVuZ3RoPSIxNjI1OTUyIiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iMmJhOWQyOTktMDIyNy00MmFhLTliOTItZjAzYmZlNzBmODhmIiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IG5hdGl2ZS11dGlscy5ub2RlIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xBUFAuQVNBUi5VTlBBQ0tFRFxOT0RFX01PRFVMRVNcTkFUSVZFLVVUSUxTXEJVSUxEXFJFTEVBU0VcTkFUSVZFLVVUSUxTLk5PREUmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDU5NTBGMkU5MTY3NERDREQ5NkM5OEU0MzI4Mjk4NEU1REI3NkI5ODg1RTc1MUQ4NzlFNTA0NDc4MzQ2QkM2QjgiIFNvdXJjZUZpbGVOYW1lPSJuYXRpdmUtdXRpbHMubm9kZSIgU291cmNlRmlsZUxlbmd0aD0iMjM1MzYwIiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iM2ZmMzI1MDAtMjg1NC00ZDc0LWEzNmItOWE2OGNiYjY0ZDE3IiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IHBhY2thZ2UtdXRpbHMubm9kZSAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05cQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcVEVBTVNcQ1VSUkVOVFxSRVNPVVJDRVNcQVBQLkFTQVIuVU5QQUNLRURcTk9ERV9NT0RVTEVTXEBNU1RFQU1TXEVMRUNUUk9OLU1PRFVMRVMtUEFDS0FHRS1VVElMU1xCVUlMRFxSRUxFQVNFXFBBQ0tBR0UtVVRJTFMuTk9ERSYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4OTc5RTA2REE1RDU5NEM3MDBDNThBOUQyRjZFODRDREM5NDFFODk1NDZFNzU3RjY3QTVCMzA3N0U5RTY0MzZGMyIgU291cmNlRmlsZU5hbWU9InBhY2thZ2UtdXRpbHMubm9kZSIgU291cmNlRmlsZUxlbmd0aD0iMTc1NDU2IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iZjExOWM2NDYtN2Q1Ni00YTg2LWI5NzEtMjdjMDExOTkwNzg5IiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IGVkZ2UtZWxvLWFwaS5ub2RlIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xBUFAuQVNBUi5VTlBBQ0tFRFxOT0RFX01PRFVMRVNcRURHRS1FTE8tQVBJXEJVSUxEXFJFTEVBU0VcRURHRS1FTE8tQVBJLk5PREUmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDUzMkQ2QUVEMDk5RjcyQkJFREZBNTY2OTc5Mzc4RUIzMDA3NUVCRjY3QzdFOUIyMkJDNDFDMjgyNzFBRTlFNDEiIFNvdXJjZUZpbGVOYW1lPSJlZGdlLWVsby1hcGkubm9kZSIgU291cmNlRmlsZUxlbmd0aD0iMTQ0NzM2IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iMjMxNDhiZTMtNDg2Ny00MDcwLWJhMzItYTc5YTMwZDM5ODYyIiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IGZhc3RUZXh0LWxhbmd1YWdlZGV0ZWN0b3Iubm9kZSAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05cQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcVEVBTVNcQ1VSUkVOVFxSRVNPVVJDRVNcQVBQLkFTQVIuVU5QQUNLRURcTk9ERV9NT0RVTEVTXEBNSUNST1NPRlRcRkFTVFRFWFQtTEFOR1VBR0VERVRFQ1RPUlxCVUlMRFxSRUxFQVNFXEZBU1RURVhULUxBTkdVQUdFREVURUNUT1IuTk9ERSYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4OUFGN0NBODlDRTQ5NDc3MzQ1RDg2Qjg4NzQwNjVCM0UzRDcyQzMwREZCMjk3ODJDOUFEM0UzNjMyQTlGMEIwNCIgU291cmNlRmlsZU5hbWU9ImZhc3RUZXh0LWxhbmd1YWdlZGV0ZWN0b3Iubm9kZSIgU291cmNlRmlsZUxlbmd0aD0iNjI4MDY0IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI2MjkyNDM3MC1mYmJkLTRjY2UtODBlNi0yZTZkYjVhYzdhNDgiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogTUlDUk9TT0ZUIEVER0UgRU1CRURERUQgQlJPV1NFUiBXRUJWSUVXIExPQURFUiIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVCBFREdFIEVNQkVEREVEIEJST1dTRVIgV0VCVklFVyBMT0FERVImI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcVGVhbXNcY3VycmVudCBDOlxVc2Vyc1xhYXJvblxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxUZWFtc01lZXRpbmdBZGRpbiBDOlxVc2Vyc1xhYXJvblxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxUZWFtc1ByZXNlbmNlQWRkaW4iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUIEVER0UgRU1CRURERUQgQlJPV1NFUiBXRUJWSUVXIExPQURFUiIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iNjkwYzQxOWUtODZiNC00MGViLThjNDctZDM1MWM1MWVhMzQyIiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IFZDUlVOVElNRTE0MC5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4mI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFVTRVJTXEFBUk9OXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXFRFQU1TXENVUlJFTlRcUkVTT1VSQ0VTXE1FRVRJTkctQURESU5cMS4wLjIyMDYyLjFcWDg2XFZDUlVOVElNRTE0MC5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIiBCaW5hcnlOYW1lPSJWQ1JVTlRJTUUxNDAuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI0ZjIxZTFlYy0xMmZkLTQ1MmItODc0My1lMDBhYmZmYmNkOTciIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogV0VCVklFVzIgV0lORE9XUyBGT1JNUyBDT05UUk9MIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogV0VCVklFVzIgV0lORE9XUyBGT1JNUyBDT05UUk9MJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXGFhcm9uXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XFRlYW1zXGN1cnJlbnQgQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcVGVhbXNNZWV0aW5nQWRkaW4gQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcVGVhbXNQcmVzZW5jZUFkZGluIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9IldFQlZJRVcyIFdJTkRPV1MgRk9STVMgQ09OVFJPTCIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iZjNhYzVjZTgtMjkwZi00OTE3LWFiMDgtYzUzZWYxM2U3MzlhIiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IEpTT04uTkVUIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogSlNPTi5ORVQmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcVGVhbXNcY3VycmVudCBDOlxVc2Vyc1xhYXJvblxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxUZWFtc01lZXRpbmdBZGRpbiBDOlxVc2Vyc1xhYXJvblxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxUZWFtc1ByZXNlbmNlQWRkaW4iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iSlNPTi5ORVQiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjVkZWI1MzRjLTBlMmQtNGI3ZC1hZmIwLTc1NTg1OGQ0ZDYwNCIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBWQ1JVTlRJTUUxNDBfMS5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4mI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFVTRVJTXEFBUk9OXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXFRFQU1TXENVUlJFTlRcUkVTT1VSQ0VTXE1FRVRJTkctQURESU5cMS4wLjIyMDYyLjFcWDY0XFZDUlVOVElNRTE0MF8xLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4iIEJpbmFyeU5hbWU9IlZDUlVOVElNRTE0MF8xLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iZjIyOTExZDktMTI5OS00MjRkLWFmMzMtYzNlNzA5MmYwZWQ0IiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IFdFQlZJRVcyIC5ORVQgSU5URVJPUCBXUkFQUEVSIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogV0VCVklFVzIgLk5FVCBJTlRFUk9QIFdSQVBQRVImI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcVGVhbXNcY3VycmVudCBDOlxVc2Vyc1xhYXJvblxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxUZWFtc01lZXRpbmdBZGRpbiBDOlxVc2Vyc1xhYXJvblxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxUZWFtc1ByZXNlbmNlQWRkaW4iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iV0VCVklFVzIgLk5FVCBJTlRFUk9QIFdSQVBQRVIiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjBiYWU1YTZmLTdjYTEtNGNjMS05OWFhLTAyNmE3MGUyYmRmMyIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBNSUNST1NPRlQgSURFTlRJVFlNT0RFTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVCBJREVOVElUWU1PREVMJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXGFhcm9uXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XFRlYW1zXGN1cnJlbnQgQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcVGVhbXNNZWV0aW5nQWRkaW4gQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcVGVhbXNQcmVzZW5jZUFkZGluIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVCBJREVOVElUWU1PREVMIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJlNTEzMmY1OS04ZTQ1LTRmZDAtYTIzNC1jMGI4NDg0YzAzM2YiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogTUlDUk9TT0ZUIEFTUC5ORVQgTVZDIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUIEFTUC5ORVQgTVZDJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXGFhcm9uXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XFRlYW1zXGN1cnJlbnQgQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcVGVhbXNNZWV0aW5nQWRkaW4gQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcVGVhbXNQcmVzZW5jZUFkZGluIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVCBBU1AuTkVUIE1WQyIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iMDhhOTA1YzMtMWIyMy00ZmZlLWIwYTktYTE0MjNmMmNjMGJjIiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IE1JQ1JPU09GVMKpIEFEQUwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCqSBBREFMJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXGFhcm9uXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XFRlYW1zXGN1cnJlbnQgQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcVGVhbXNNZWV0aW5nQWRkaW4gQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcVGVhbXNQcmVzZW5jZUFkZGluIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKpIEFEQUwiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjJjZmEzNzYxLWRiNTItNGExMS04YTEwLTRmMGQzZjkzYjhkMiIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBNSUNST1NPRlQgVEVBTVMiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlQgVEVBTVMmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcYWFyb25cQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcVGVhbXNcY3VycmVudCBDOlxVc2Vyc1xhYXJvblxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxUZWFtc01lZXRpbmdBZGRpbiBDOlxVc2Vyc1xhYXJvblxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxUZWFtc1ByZXNlbmNlQWRkaW4iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUIFRFQU1TIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI2ZTJiYTM1YS1kZTNlLTQ3NTgtOGQ3NC0xNzg2ZTBkODg0OTgiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogV0VCVklFVzIgV1BGIENPTlRST0wiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBXRUJWSUVXMiBXUEYgQ09OVFJPTCYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluOiBDOlxVc2Vyc1xhYXJvblxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxUZWFtc1xjdXJyZW50IEM6XFVzZXJzXGFhcm9uXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XFRlYW1zTWVldGluZ0FkZGluIEM6XFVzZXJzXGFhcm9uXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XFRlYW1zUHJlc2VuY2VBZGRpbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJXRUJWSUVXMiBXUEYgQ09OVFJPTCIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iM2FhYTk5N2YtMDQ0Yi00OWY1LWE4YjMtNDY1NzZjNjQxOTI3IiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IE1TVkNQMTQwLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcVVNFUlNcQUFST05cQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcVEVBTVNcQ1VSUkVOVFxSRVNPVVJDRVNcTUVFVElORy1BRERJTlwxLjAuMjIwNjIuMVxYODZcTVNWQ1AxNDAuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriIgQmluYXJ5TmFtZT0iTVNWQ1AxNDAuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSIxZTg4YWY0Mi04OGI3LTRlNzEtODc4ZC02MGNkMGRiZWNmZDYiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogU2lnbmVyL3Byb2R1Y3QgcnVsZSBmb3IgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTL01JQ1JPU09GVCBURUFNUyIgRGVzY3JpcHRpb249IkluZm9ybWF0aW9uIGFjcXVpcmVkIGZyb20gVHJ1c3RlZFNpZ25lcnMucHMxIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVCBURUFNUyIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iYzZiMTJhMDYtYjQ1MS00YzlmLWFjNDItODk3ZDE0ZTYyNjhiIiBOYW1lPSJBbGxvdyBzZWxlY3RlZCBmaWxlcyBmcm9tICVPU0RSSVZFJVwufkJUXFNPVVJDRVMgZHVyaW5nIFdpbmRvd3MgdXBncmFkZTogU2lnbmVyL3Byb2R1Y3QvZmlsZSBydWxlIGZvciBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMvTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0vR0VORVJBTFRFTC5ETEwiIERlc2NyaXB0aW9uPSJJbmZvcm1hdGlvbiBhY3F1aXJlZCBmcm9tIFRydXN0ZWRTaWduZXJzLnBzMSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSIgQmluYXJ5TmFtZT0iR0VORVJBTFRFTC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjM1M2QxNjM0LThmYjMtNDZjNi1hZDUwLWU0OTQ0ZTVmYmJjMyIgTmFtZT0iQWxsb3cgc2VsZWN0ZWQgZmlsZXMgZnJvbSAlT1NEUklWRSVcLn5CVFxTT1VSQ0VTIGR1cmluZyBXaW5kb3dzIHVwZ3JhZGU6IFNpZ25lci9wcm9kdWN0L2ZpbGUgcnVsZSBmb3IgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTL01JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNL1dEU0NPUkUuRExMIiBEZXNjcmlwdGlvbj0iSW5mb3JtYXRpb24gYWNxdWlyZWQgZnJvbSBUcnVzdGVkU2lnbmVycy5wczEiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0iIEJpbmFyeU5hbWU9IldEU0NPUkUuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSIzNmIwMTJhYy0wMzg2LTRiZjQtYWQxYy02MjdkNjFjZmVkMTYiIE5hbWU9IkFsbG93IHNlbGVjdGVkIGZpbGVzIGZyb20gJU9TRFJJVkUlXC5+QlRcU09VUkNFUyBkdXJpbmcgV2luZG93cyB1cGdyYWRlOiBTaWduZXIvcHJvZHVjdC9maWxlIHJ1bGUgZm9yIE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUy9NSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTS9BRUlOVi5ETEwiIERlc2NyaXB0aW9uPSJJbmZvcm1hdGlvbiBhY3F1aXJlZCBmcm9tIFRydXN0ZWRTaWduZXJzLnBzMSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSIgQmluYXJ5TmFtZT0iQUVJTlYuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSIyNTAxMTE2OC01ODYzLTQ0YzUtOTEyZi05YWE3N2M3YmVhOTgiIE5hbWU9Ik1TIEVkZ2UgY29udGVudCBwcm90ZWN0aW9uOiBTaWduZXIvcHJvZHVjdCBydWxlIGZvciBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMvV0lERVZJTkUgQ09OVEVOVCBERUNSWVBUSU9OIE1PRFVMRSIgRGVzY3JpcHRpb249IkluZm9ybWF0aW9uIGFjcXVpcmVkIGZyb20gVHJ1c3RlZFNpZ25lcnMucHMxIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9IldJREVWSU5FIENPTlRFTlQgREVDUllQVElPTiBNT0RVTEUiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjllNDgwOTI1LTAzNjItNDA3MS1hMjhmLTQwMWZjNjNhNzJlYiIgTmFtZT0iTVNWQyBydW50aW1lIERMTDogU2lnbmVyL3Byb2R1Y3QvZmlsZSBydWxlIGZvciBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMvTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMDUvTVNWQ1A4MC5ETEwiIERlc2NyaXB0aW9uPSJJbmZvcm1hdGlvbiBhY3F1aXJlZCBmcm9tIFRydXN0ZWRTaWduZXJzLnBzMSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAwNSIgQmluYXJ5TmFtZT0iTVNWQ1A4MC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjkyMTVlOGVjLTIzZWEtNDA5My04YTM0LTA1YTQ3NTNhMDUxOSIgTmFtZT0iTVNWQyBydW50aW1lIERMTDogU2lnbmVyL3Byb2R1Y3QvZmlsZSBydWxlIGZvciBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMvTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMDUvTVNWQ1I4MC5ETEwiIERlc2NyaXB0aW9uPSJJbmZvcm1hdGlvbiBhY3F1aXJlZCBmcm9tIFRydXN0ZWRTaWduZXJzLnBzMSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAwNSIgQmluYXJ5TmFtZT0iTVNWQ1I4MC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjViNTljMDFhLTBmODItNGY1NS04NjRmLTUwMTU5MzdiMmE3OSIgTmFtZT0iTUZDIHJ1bnRpbWUgRExMOiBTaWduZXIvcHJvZHVjdC9maWxlIHJ1bGUgZm9yIE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUy9NSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAwOC9NRkM5MFUuRExMIiBEZXNjcmlwdGlvbj0iSW5mb3JtYXRpb24gYWNxdWlyZWQgZnJvbSBUcnVzdGVkU2lnbmVycy5wczEiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMDgiIEJpbmFyeU5hbWU9Ik1GQzkwVS5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImJhYjhkMzliLWNhZmYtNGYxZi04NWYxLTUwNTMxYmQ3YzFkMSIgTmFtZT0iTVNWQyBydW50aW1lIERMTDogU2lnbmVyL3Byb2R1Y3QvZmlsZSBydWxlIGZvciBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMvTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMDgvTVNWQ1A5MC5ETEwiIERlc2NyaXB0aW9uPSJJbmZvcm1hdGlvbiBhY3F1aXJlZCBmcm9tIFRydXN0ZWRTaWduZXJzLnBzMSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAwOCIgQmluYXJ5TmFtZT0iTVNWQ1A5MC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjRmMDNiNDdjLWUwNmYtNGMxNS1hZGJkLTEyN2VmNmJlM2YyZSIgTmFtZT0iTVNWQyBydW50aW1lIERMTDogU2lnbmVyL3Byb2R1Y3QvZmlsZSBydWxlIGZvciBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMvTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMDgvTVNWQ1I5MC5ETEwiIERlc2NyaXB0aW9uPSJJbmZvcm1hdGlvbiBhY3F1aXJlZCBmcm9tIFRydXN0ZWRTaWduZXJzLnBzMSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAwOCIgQmluYXJ5TmFtZT0iTVNWQ1I5MC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImJhOWZlMGMyLWE2NDctNDhiYi04NzAwLTM4Y2ZiZjA2YmQ0OSIgTmFtZT0iTVNWQyBydW50aW1lIERMTDogU2lnbmVyL3Byb2R1Y3QvZmlsZSBydWxlIGZvciBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMvTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTAvTVNWQ1AxMDAuRExMIiBEZXNjcmlwdGlvbj0iSW5mb3JtYXRpb24gYWNxdWlyZWQgZnJvbSBUcnVzdGVkU2lnbmVycy5wczEiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTAiIEJpbmFyeU5hbWU9Ik1TVkNQMTAwLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iZDJmODA3YzEtYWEzNC00NDkyLWEyMTEtN2EyMzZmN2M1NWIzIiBOYW1lPSJNU1ZDIHJ1bnRpbWUgRExMOiBTaWduZXIvcHJvZHVjdC9maWxlIHJ1bGUgZm9yIE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUy9NSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxMC9NU1ZDUjEwMF9DTFIwNDAwLkRMTCIgRGVzY3JpcHRpb249IkluZm9ybWF0aW9uIGFjcXVpcmVkIGZyb20gVHJ1c3RlZFNpZ25lcnMucHMxIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDEwIiBCaW5hcnlOYW1lPSJNU1ZDUjEwMF9DTFIwNDAwLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iMGIwOTczMTItYmU2MC00MGI4LWIwN2ItZDY1MGZkMDUyNjVmIiBOYW1lPSJNRkMgcnVudGltZSBETEw6IFNpZ25lci9wcm9kdWN0L2ZpbGUgcnVsZSBmb3IgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTL01JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDEyL01GQzExMC5ETEwiIERlc2NyaXB0aW9uPSJJbmZvcm1hdGlvbiBhY3F1aXJlZCBmcm9tIFRydXN0ZWRTaWduZXJzLnBzMSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxMiIgQmluYXJ5TmFtZT0iTUZDMTEwLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iYWZmNDZiNWEtM2FkYi00NGYzLWIzZWEtNmJmZjNmNDYxNzUyIiBOYW1lPSJNU1ZDIHJ1bnRpbWUgRExMOiBTaWduZXIvcHJvZHVjdC9maWxlIHJ1bGUgZm9yIE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUy9NSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxMi9NU1ZDUDExMC5ETEwiIERlc2NyaXB0aW9uPSJJbmZvcm1hdGlvbiBhY3F1aXJlZCBmcm9tIFRydXN0ZWRTaWduZXJzLnBzMSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxMiIgQmluYXJ5TmFtZT0iTVNWQ1AxMTAuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI3NTFiODM5ZS04NGM2LTQ5NDctOTBhYS02YWZkYTIzODE2MjMiIE5hbWU9Ik1TVkMgcnVudGltZSBETEw6IFNpZ25lci9wcm9kdWN0L2ZpbGUgcnVsZSBmb3IgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTL01JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDEyL01TVkNSMTEwLkRMTCIgRGVzY3JpcHRpb249IkluZm9ybWF0aW9uIGFjcXVpcmVkIGZyb20gVHJ1c3RlZFNpZ25lcnMucHMxIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDEyIiBCaW5hcnlOYW1lPSJNU1ZDUjExMC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjE5M2I1YzM0LWQ1NWYtNDU4ZC1iZmRkLTA5YzZlMjlkYjAxMSIgTmFtZT0iTUZDIHJ1bnRpbWUgRExMOiBTaWduZXIvcHJvZHVjdC9maWxlIHJ1bGUgZm9yIE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUy9NSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxMy9NRkMxMjAuRExMIiBEZXNjcmlwdGlvbj0iSW5mb3JtYXRpb24gYWNxdWlyZWQgZnJvbSBUcnVzdGVkU2lnbmVycy5wczEiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTMiIEJpbmFyeU5hbWU9Ik1GQzEyMC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjU5MGI3MjVkLTYyMWItNGVmMC04Y2ZhLTU5NmE2NTU5ZmU5ZiIgTmFtZT0iTUZDIHJ1bnRpbWUgRExMOiBTaWduZXIvcHJvZHVjdC9maWxlIHJ1bGUgZm9yIE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUy9NSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxMy9NRkMxMjBVLkRMTCIgRGVzY3JpcHRpb249IkluZm9ybWF0aW9uIGFjcXVpcmVkIGZyb20gVHJ1c3RlZFNpZ25lcnMucHMxIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDEzIiBCaW5hcnlOYW1lPSJNRkMxMjBVLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iMjdmZjk0ZGMtZTVkYy00YzhlLTliNTctZDJmODlkMTFlMDk1IiBOYW1lPSJNU1ZDIHJ1bnRpbWUgRExMOiBTaWduZXIvcHJvZHVjdC9maWxlIHJ1bGUgZm9yIE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUy9NSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxMy9NU1ZDUDEyMC5ETEwiIERlc2NyaXB0aW9uPSJJbmZvcm1hdGlvbiBhY3F1aXJlZCBmcm9tIFRydXN0ZWRTaWduZXJzLnBzMSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxMyIgQmluYXJ5TmFtZT0iTVNWQ1AxMjAuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI4YzIyMGRlMy0wOTUyLTQ0MTEtOGJlNC1lMjg0YTI2Y2ExZDgiIE5hbWU9Ik1TVkMgcnVudGltZSBETEw6IFNpZ25lci9wcm9kdWN0L2ZpbGUgcnVsZSBmb3IgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTL01JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDEzL01TVkNSMTIwLkRMTCIgRGVzY3JpcHRpb249IkluZm9ybWF0aW9uIGFjcXVpcmVkIGZyb20gVHJ1c3RlZFNpZ25lcnMucHMxIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDEzIiBCaW5hcnlOYW1lPSJNU1ZDUjEyMC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjJmZTI0ZTEyLWY5NjEtNDgyMi1hYjFiLTE2MTNhYTFlMGI0YSIgTmFtZT0iTVNWQyBydW50aW1lIERMTDogU2lnbmVyL3Byb2R1Y3QvZmlsZSBydWxlIGZvciBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMvTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTUvTVNWQ1AxNDAuRExMIiBEZXNjcmlwdGlvbj0iSW5mb3JtYXRpb24gYWNxdWlyZWQgZnJvbSBUcnVzdGVkU2lnbmVycy5wczEiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTUiIEJpbmFyeU5hbWU9Ik1TVkNQMTQwLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iMDc0M2Q4YzEtNDM3My00YjhiLWI2NDctZWJjYTlhMWQwZDY4IiBOYW1lPSJNU1ZDIHJ1bnRpbWUgRExMOiBTaWduZXIvcHJvZHVjdC9maWxlIHJ1bGUgZm9yIE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUy9NSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxNS9WQ1JVTlRJTUUxNDAuRExMIiBEZXNjcmlwdGlvbj0iSW5mb3JtYXRpb24gYWNxdWlyZWQgZnJvbSBUcnVzdGVkU2lnbmVycy5wczEiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTUiIEJpbmFyeU5hbWU9IlZDUlVOVElNRTE0MC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImExMmNkOTRhLWI3YTAtNGRiYy04ZjVjLTgwZjQyYTRlZTY0YiIgTmFtZT0iTUZDIHJ1bnRpbWUgRExMOiBTaWduZXIvcHJvZHVjdC9maWxlIHJ1bGUgZm9yIE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUy9NSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxNS9NRkMxNDBVLkRMTCIgRGVzY3JpcHRpb249IkluZm9ybWF0aW9uIGFjcXVpcmVkIGZyb20gVHJ1c3RlZFNpZ25lcnMucHMxIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDE1IiBCaW5hcnlOYW1lPSJNRkMxNDBVLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iNjcwY2M3OTAtMjcwOS00ZmQ3LTg0YmMtOGY4ZjY1YzgxMDhlIiBOYW1lPSJNU1ZDIHJ1bnRpbWUgRExMOiBTaWduZXIvcHJvZHVjdC9maWxlIHJ1bGUgZm9yIE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUy9NSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxNy9NU1ZDUDE0MC5ETEwiIERlc2NyaXB0aW9uPSJJbmZvcm1hdGlvbiBhY3F1aXJlZCBmcm9tIFRydXN0ZWRTaWduZXJzLnBzMSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxNyIgQmluYXJ5TmFtZT0iTVNWQ1AxNDAuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSIxYTI0YTYwYy0zM2UyLTRhMzktOGZlYS1mNTU4MDM1Yjk5ZDciIE5hbWU9Ik1TVkMgcnVudGltZSBETEw6IFNpZ25lci9wcm9kdWN0L2ZpbGUgcnVsZSBmb3IgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTL01JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDE3L1ZDUlVOVElNRTE0MC5ETEwiIERlc2NyaXB0aW9uPSJJbmZvcm1hdGlvbiBhY3F1aXJlZCBmcm9tIFRydXN0ZWRTaWduZXJzLnBzMSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxNyIgQmluYXJ5TmFtZT0iVkNSVU5USU1FMTQwLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iYjc1NDVlMTgtYzYyYS00NTQ4LTg2ZjktY2M3ODQyMDM2MzkxIiBOYW1lPSJNRkMgcnVudGltZSBETEw6IFNpZ25lci9wcm9kdWN0L2ZpbGUgcnVsZSBmb3IgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTL01JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDE3L01GQzE0MC5ETEwiIERlc2NyaXB0aW9uPSJJbmZvcm1hdGlvbiBhY3F1aXJlZCBmcm9tIFRydXN0ZWRTaWduZXJzLnBzMSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxNyIgQmluYXJ5TmFtZT0iTUZDMTQwLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iNzcyMTkyMDQtMDI4MC00MTJkLTgzODktYTUzMjYxOGFkMTEzIiBOYW1lPSJNRkMgcnVudGltZSBETEw6IFNpZ25lci9wcm9kdWN0L2ZpbGUgcnVsZSBmb3IgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTL01JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAxMC9NRkMxMDBVLkRMTCIgRGVzY3JpcHRpb249IkluZm9ybWF0aW9uIGFjcXVpcmVkIGZyb20gVHJ1c3RlZFNpZ25lcnMucHMxIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAxMCIgQmluYXJ5TmFtZT0iTUZDMTAwVS5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImM2NDI1MDEzLTM0M2QtNDE0NS1iNzIxLWY5MjBlYzdjZmJmYiIgTmFtZT0iTVNWQyBydW50aW1lIERMTDogU2lnbmVyL3Byb2R1Y3QvZmlsZSBydWxlIGZvciBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMvTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuL01TVkNQMTQwLkRMTCIgRGVzY3JpcHRpb249IkluZm9ybWF0aW9uIGFjcXVpcmVkIGZyb20gVHJ1c3RlZFNpZ25lcnMucHMxIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriIgQmluYXJ5TmFtZT0iTVNWQ1AxNDAuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI4M2UyZTllYi04ZjEwLTRjZGItYmU1ZS03Zjg5ZDdiZGM5YTMiIE5hbWU9Ik1TVkMgcnVudGltZSBETEw6IFNpZ25lci9wcm9kdWN0L2ZpbGUgcnVsZSBmb3IgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTL01JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/Cri9WQ1JVTlRJTUUxNDAuRExMIiBEZXNjcmlwdGlvbj0iSW5mb3JtYXRpb24gYWNxdWlyZWQgZnJvbSBUcnVzdGVkU2lnbmVycy5wczEiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIiBCaW5hcnlOYW1lPSJWQ1JVTlRJTUUxNDAuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iOWY2ZWU2ZjItYzM2MC00YWE1LWI1NTgtNzNjOWYyYmRjZTYzIiBOYW1lPSJMb2dpdGVjaCBPcHRpb25zOiBOZXd0b25zb2Z0Lkpzb24uZGxsLmRlcGxveSAtIEhBU0ggUlVMRSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxMT0dJU0hSRFxMT0dJT1BUSU9OU1xQTFVHSU5TXENBN0MwOTExLUZCRjctNEU4Ny05QzIzLTI1OTg3MzU4MzAzQlxDT05URU5UXFBVQkxJU0hcQVBQTElDQVRJT04gRklMRVNcTE9HSU9QVElPTlNXT1JEQURESU5fOF8xMF8zM18wXE5FV1RPTlNPRlQuSlNPTi5ETEwuREVQTE9ZIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4QUMwNEJCRjk2NTFBNzQ4Njg1Q0Q3N0Q5QjEzRDVBOEJBMEI5Q0M2N0UwNzgxODU2MzU2ODU1NDdENDQyQ0JBNSIgU291cmNlRmlsZU5hbWU9Ik5ld3RvbnNvZnQuSnNvbi5kbGwuZGVwbG95IiBTb3VyY2VGaWxlTGVuZ3RoPSI0Njg0ODAiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI2NDQ0ODM2Mi0zNTczLTRjMTItOTY1My00NzYwYjkzMDUxOTAiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IG51bml0LmZyYW1ld29yay5kbGwuZGVwbG95IC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFBMVUdJTlNcNENBQTQ0RUItQ0RGMC00RUNELUI4MjMtMzhCMjgxODdFNTlBXENPTlRFTlRcUFVCTElTSFxBUFBMSUNBVElPTiBGSUxFU1xMT0dJT1BUSU9OU0VYQ0VMQURESU5fOF8xMF8zM18wXE5VTklULkZSQU1FV09SSy5ETEwuREVQTE9ZIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4NEM0RkNGRjAzRDI4NThDMUY4NkY0QkZCODhEQjZDOEM4MTgzOTc1RTlFODY2QjI1MzFDNThFMzUwMDFENjdBOCIgU291cmNlRmlsZU5hbWU9Im51bml0LmZyYW1ld29yay5kbGwuZGVwbG95IiBTb3VyY2VGaWxlTGVuZ3RoPSIxNTE1NTIiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI0NzcxYTE3ZS05ZDk0LTRiMzctODQxOS0zNTE3YzU2OWE4YzEiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IERpcmVjdFNob3dMaWItMjAwNS5kbGwgLSBIQVNIIFJVTEUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcU09GVFdBUkVcQ1VSUkVOVFxESVJFQ1RTSE9XTElCLTIwMDUuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4RDY0ODk5MUM3QkMwREJGM0FDMzIwOTMxOTRGRDJFNUQ1ODUzQkE1QTc4NzRBRTNEQzVCN0FFMUMzOUY4ODZGMCIgU291cmNlRmlsZU5hbWU9IkRpcmVjdFNob3dMaWItMjAwNS5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjMwMzEwNCIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjZkNjMwMjc1LWRjZTctNDE4Yy05NWYzLTFhNDQ3MWVmNjA0OSIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogRVZSUHJlc2VudGVyNjQuZGxsIC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFNPRlRXQVJFXENVUlJFTlRcRVZSUFJFU0VOVEVSNjQuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4NEY0NDEzMENFNjE0MzEzNUE4QkMxMENEQURGRTY3NTkwNDY4MEU1RTI3NjE2M0RERjdGODM1MTZCMUU4NUMzRSIgU291cmNlRmlsZU5hbWU9IkVWUlByZXNlbnRlcjY0LmRsbCIgU291cmNlRmlsZUxlbmd0aD0iNTQyNzIiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI4YTMyYjUzOS02YTQ4LTQ1NDEtYTMzNC1jNTE1ZTMyNWExOGUiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IEZhY2Vib29rLmRsbCAtIEhBU0ggUlVMRSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxMT0dJU0hSRFxMT0dJT1BUSU9OU1xTT0ZUV0FSRVxDVVJSRU5UXEZBQ0VCT09LLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDY1MTk5RjUyN0RFMzg5REM4RTI1RTMxQTZEMkM2QUIyMjM2RkM2REM2QTAxNzQ1RTZCQjc1RDQ3NzlDNUM5QjAiIFNvdXJjZUZpbGVOYW1lPSJGYWNlYm9vay5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjEwODAzMiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9ImVjOTgwZmM0LWZmNjktNDY2Zi05NTQzLThmODlhMTUzYjBlOCIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogTG9naU9mZmljZS5kbGwuZGVwbG95IC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFBMVUdJTlNcNENBQTQ0RUItQ0RGMC00RUNELUI4MjMtMzhCMjgxODdFNTlBXENPTlRFTlRcUFVCTElTSFxBUFBMSUNBVElPTiBGSUxFU1xMT0dJT1BUSU9OU0VYQ0VMQURESU5fOF8xMF8zM18wXExPR0lPRkZJQ0UuRExMLkRFUExPWSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweEVCRDM0NTExNzZGMEU4OEY3MDcxNjFGQkM3QzVENDM4NjcyNUExRkYzRjJEMDU0QkM5MUU0Q0IwRDcyNjNBMTciIFNvdXJjZUZpbGVOYW1lPSJMb2dpT2ZmaWNlLmRsbC5kZXBsb3kiIFNvdXJjZUZpbGVMZW5ndGg9IjkyMTYiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI0OTJiYmU4OS04MDRmLTRkMTAtOTBkMi1lZDBjYTY1ZTJjOWUiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IGxpYkdMRVN2Mi5kbGwgLSBIQVNIIFJVTEUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcU09GVFdBUkVcQ1VSUkVOVFxMSUJHTEVTVjIuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4NzQ2NDJEOUFDNkM1QTI4MDYzMEVGQjBCMjYyMTAyMjlEOUFBNjhDOUQzREE3MDcwMDk2MEVDOEVCNjE1QkIxMCIgU291cmNlRmlsZU5hbWU9ImxpYkdMRVN2Mi5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjUyMzAwODAiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI3N2ExNjViMy01YzA3LTQyNTUtYTc2OC00Y2Q5MTVlY2E5ZTEiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IE5ld3RvbnNvZnQuSnNvbi5kbGwuZGVwbG95IC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFBMVUdJTlNcNENBQTQ0RUItQ0RGMC00RUNELUI4MjMtMzhCMjgxODdFNTlBXENPTlRFTlRcUFVCTElTSFxBUFBMSUNBVElPTiBGSUxFU1xMT0dJT1BUSU9OU0VYQ0VMQURESU5fOF8xMF8zM18wXE5FV1RPTlNPRlQuSlNPTi5ETEwuREVQTE9ZIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4MEMwODVEREIxQjVGMEQ1RDYxQzhFRjg1QzU1QUJBRTg5RTkyNUEzNDc0MzQ5QjgzMDBDQkVBRTMxRTZEQUZBQyIgU291cmNlRmlsZU5hbWU9Ik5ld3RvbnNvZnQuSnNvbi5kbGwuZGVwbG95IiBTb3VyY2VGaWxlTGVuZ3RoPSI1MjU4MjQiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSJmMjE3MWRhZi0xNTNhLTRlMTQtYTQ3Yi1kYmZiZDUyY2YwNTQiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IExvZ2lPcHRpb25BaS5haXAgLSBIQVNIIFJVTEUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcUExVR0lOU1xCMjMwQjM2Qy1DNjI0LTQwRTMtQTEyMC01NDg2RkRGNERGMEVcQUlQXDY0XExPR0lPUFRJT05BSS5BSVAiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHg1N0ZBM0Q1OTA2MDM5MEIxOEQ0OEFGQTg4RkFBMDM4NEQxMDE4MUE0QkRCMDYyODZBOTY2RTlCNjA1M0YxNzQxIiBTb3VyY2VGaWxlTmFtZT0iTG9naU9wdGlvbkFpLmFpcCIgU291cmNlRmlsZUxlbmd0aD0iMTc2MjgxNiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjA4MjhiZjcyLWM1NjktNGNiYS1hMTJiLWI0MWRlNDE5ODFjMiIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogU3lzdGVtLldpbmRvd3MuSW50ZXJhY3Rpdml0eS5kbGwgLSBIQVNIIFJVTEUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcU09GVFdBUkVcQ1VSUkVOVFxTWVNURU0uV0lORE9XUy5JTlRFUkFDVElWSVRZLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDMwMEE0NUREM0ZBNEY3RUI3NUM0NDQ3NjhDQTlBODI2ODUyOEU1MTc4MDhEQTM4OTVFNTY4QjhBNzAyOEU1MDEiIFNvdXJjZUZpbGVOYW1lPSJTeXN0ZW0uV2luZG93cy5JbnRlcmFjdGl2aXR5LmRsbCIgU291cmNlRmlsZUxlbmd0aD0iMzk5MzYiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSIwNDA0N2IzMy04ZWNjLTQ2YzUtODEyMS0wNzc2NzFjMzQ0NTAiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IE5ld3RvbnNvZnQuSnNvbi5kbGwgLSBIQVNIIFJVTEUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcU09GVFdBUkVcQ1VSUkVOVFxORVdUT05TT0ZULkpTT04uRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4OEVEOEQzOTYzMEYyNjI5QzE2MUM4OTcyODdBMEQxQTkzOTI2OTc1NDFFNzA1Q0E3QTc3MzI1Mzk0NjgxMUU1QyIgU291cmNlRmlsZU5hbWU9Ik5ld3RvbnNvZnQuSnNvbi5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjQ4NTg4OCIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjIzZGVkMzEwLTk5NTAtNDUwMC1iNzBhLTA0OTJhNzdlZjg2MyIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogbGliRUdMLmRsbCAtIEhBU0ggUlVMRSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxMT0dJU0hSRFxMT0dJT1BUSU9OU1xTT0ZUV0FSRVxDVVJSRU5UXExJQkVHTC5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHhGNUE1MDI1N0VDMEYwOTkyMTZGNDQ4MkUzNjcxN0MxOUZGNzdERTQxMTJDMjY4QkU0NUZGOEQxMkQ5QzBGN0JEIiBTb3VyY2VGaWxlTmFtZT0ibGliRUdMLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iMTEwMDgwIiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iMmZkYWIxOGQtNTQzZS00MGU4LWIzMGMtNDM0OTNkODQ2MzBhIiBOYW1lPSJMb2dpdGVjaCBPcHRpb25zOiBMb2dpT3B0aW9uQWkyMDIwLmFpcCAtIEhBU0ggUlVMRSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxMT0dJU0hSRFxMT0dJT1BUSU9OU1xQTFVHSU5TXEIyMzBCMzZDLUM2MjQtNDBFMy1BMTIwLTU0ODZGREY0REYwRVxBSVBcNjRcTE9HSU9QVElPTkFJMjAyMC5BSVAiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHg4OTZENkMzODE0NEVBMTc1RDFDQzY1MTBFMUFCNUQ0OEYzQUIxODc3MEY2MzY5M0ZFNDM1NDlGNUI1ODcxMzlGIiBTb3VyY2VGaWxlTmFtZT0iTG9naU9wdGlvbkFpMjAyMC5haXAiIFNvdXJjZUZpbGVMZW5ndGg9IjE2MDQwOTYiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSJiZjE0ZjNhMi05YjFiLTQwNmUtOGEzYS02YzQwZDc5YjNiMjUiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IHdlYnNvY2tldC1zaGFycC5kbGwuZGVwbG95IC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFBMVUdJTlNcNENBQTQ0RUItQ0RGMC00RUNELUI4MjMtMzhCMjgxODdFNTlBXENPTlRFTlRcUFVCTElTSFxBUFBMSUNBVElPTiBGSUxFU1xMT0dJT1BUSU9OU0VYQ0VMQURESU5fOF8xMF8zM18wXFdFQlNPQ0tFVC1TSEFSUC5ETEwuREVQTE9ZIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4RkNFMDIwRjk2RTlDNzhEQTkxNjlEMUQ4MDJFRjZBNkJGQUExNThDOEQ1OTY1QkNFQzA4MEE1MjQ0Qjc3OEZDRiIgU291cmNlRmlsZU5hbWU9IndlYnNvY2tldC1zaGFycC5kbGwuZGVwbG95IiBTb3VyY2VGaWxlTGVuZ3RoPSIyNDk4NTYiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI5MTI5NTIyMS0wY2JlLTQ5OWUtODBmYi02ZjYyMzI3MDg2OGYiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IExvZ2lPcHRpb25zRXhjZWxBZGRpbi5kbGwuZGVwbG95IC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFBMVUdJTlNcNENBQTQ0RUItQ0RGMC00RUNELUI4MjMtMzhCMjgxODdFNTlBXENPTlRFTlRcUFVCTElTSFxBUFBMSUNBVElPTiBGSUxFU1xMT0dJT1BUSU9OU0VYQ0VMQURESU5fOF8xMF8zM18wXExPR0lPUFRJT05TRVhDRUxBRERJTi5ETEwuREVQTE9ZIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4RERDNDY2NzBCRENGMzE3RTk0NUFDN0I0RTlFMERBNDQ5NkRDRjczQTE3NTdEOTYxRDlFOTQ4RTNGNDQ2RTlFQSIgU291cmNlRmlsZU5hbWU9IkxvZ2lPcHRpb25zRXhjZWxBZGRpbi5kbGwuZGVwbG95IiBTb3VyY2VGaWxlTGVuZ3RoPSI5MjE2MCIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjkwNWU3MDQ1LTA0MTQtNGNjOC1iZmZhLWEwN2Q2NTIzM2FjNyIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogbGlic3NoMi5kbGwgLSBIQVNIIFJVTEUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcU09GVFdBUkVcQ1VSUkVOVFxMQUNMSUVOVFxMSUJTU0gyLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweEFGOThBM0VBRTg2MzdCMzk0QjBCOTlGMEQyQTVGNUYyQzM0QzA0QjIxMkE3ODJCNEYwMjE5OThDRjc5MkIwMkYiIFNvdXJjZUZpbGVOYW1lPSJsaWJzc2gyLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iMTQ0ODk2IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iNzU0M2Q0MjAtMTE1My00YmFjLThlNjQtNGVmOWU1NzJiZWQwIiBOYW1lPSJMb2dpdGVjaCBPcHRpb25zOiBDZWZTaGFycC5kbGwgLSBIQVNIIFJVTEUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcU09GVFdBUkVcQ1VSUkVOVFxDRUZTSEFSUC5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHg0NUY3NEU0OEQ4MTg0MDY5RkYwQzE2OUVDMDNBMkY0RDQzNjAxMDQ3OEM4ODNBNzk1Q0QxQjBGOTMwM0FGQTA0IiBTb3VyY2VGaWxlTmFtZT0iQ2VmU2hhcnAuZGxsIiBTb3VyY2VGaWxlTGVuZ3RoPSIxOTcxMjAiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSJjOTJmNTZjMi05ZWFhLTRjMjktOGNkNS0zMGI5YmJmMDVkNGMiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IGxpYmVheTMyLmRsbCAtIEhBU0ggUlVMRSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxMT0dJU0hSRFxMT0dJT1BUSU9OU1xTT0ZUV0FSRVxDVVJSRU5UXExBQ0xJRU5UXExJQkVBWTMyLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweEM5ODYzNzYwMERBMkEzMkQ5RjlCRjQzNEQ5NTcxNTA1QUFCQThERkE2MkFDRDMyMEYyOUM2NjJFMTk3MDM1OTkiIFNvdXJjZUZpbGVOYW1lPSJsaWJlYXkzMi5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjIyODY3NDciIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI2Nzc4ZDFmNy0xZWU4LTQyMzItYjg3ZS1jMjFiNjlmOTgzNjIiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IExvZ2lPcHRpb25BaTIwMjAuYWlwIC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFBMVUdJTlNcQjIzMEIzNkMtQzYyNC00MEUzLUExMjAtNTQ4NkZERjRERjBFXEFJUFwzMlxMT0dJT1BUSU9OQUkyMDIwLkFJUCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDBGNkY1QjBERDk4MjMwNUFDMzQxQjIyMjBENTYwNERGMjRCMjk0NTFFRjRGNzUzRjJDMTNERTFBQzdDNzQzODUiIFNvdXJjZUZpbGVOYW1lPSJMb2dpT3B0aW9uQWkyMDIwLmFpcCIgU291cmNlRmlsZUxlbmd0aD0iMTIyMTYzMiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9ImEwOGNlYWRkLWYzN2UtNDgzMS05NTFhLWY3NzhhNjI1NDQwYyIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogemxpYi5kbGwgLSBIQVNIIFJVTEUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcU09GVFdBUkVcQ1VSUkVOVFxMQUNMSUVOVFxaTElCLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweEFBNTY4MjA4OTMyMEU1RDc2REMxMDdGOThGMEI2NUZBMTNFOEQzMTc2QzM0OTQxMzEwRDVEQzYzMjVEMzJDOTkiIFNvdXJjZUZpbGVOYW1lPSJ6bGliLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iNzc4MjQiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI3MTRhMzljZS1hMjYwLTQzMjgtYjhmNC0yYzk3ODhkYzM3ZDYiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IGNocm9tZV9lbGYuZGxsIC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFNPRlRXQVJFXENVUlJFTlRcQ0hST01FX0VMRi5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHg2OTM2QTQyNDE2QUE1MDRDQzY4RDc4MDJDODMwNjRGOTE2MjZENEU5RkY4Nzg2N0YzRTVFRkQ5NDIwRjZBMUY1IiBTb3VyY2VGaWxlTmFtZT0iY2hyb21lX2VsZi5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjY3MTIzMiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjZiZjY3MzI0LWMyMTktNGZkMi05N2M2LWQ4NGYxZTAzM2UwYSIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogTG9naU9wdGlvbnNXb3JkQWRkaW4uZGxsLmRlcGxveSAtIEhBU0ggUlVMRSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxMT0dJU0hSRFxMT0dJT1BUSU9OU1xQTFVHSU5TXENBN0MwOTExLUZCRjctNEU4Ny05QzIzLTI1OTg3MzU4MzAzQlxDT05URU5UXFBVQkxJU0hcQVBQTElDQVRJT04gRklMRVNcTE9HSU9QVElPTlNXT1JEQURESU5fOF8xMF8zM18wXExPR0lPUFRJT05TV09SREFERElOLkRMTC5ERVBMT1kiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHg4MkI5NkUzNjYyODdEMzU2MjM0RkQ2MjYxNjg4NjRCNDI5OUYzNTk4NzY3REE2RDlEREYxQjg0QzE3OTFBODZBIiBTb3VyY2VGaWxlTmFtZT0iTG9naU9wdGlvbnNXb3JkQWRkaW4uZGxsLmRlcGxveSIgU291cmNlRmlsZUxlbmd0aD0iMzc0MjcyIiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iMzljZjRjMzktYzg2Mi00MmNkLTk0NDctZWY5MjA5ZjViMGQ0IiBOYW1lPSJMb2dpdGVjaCBPcHRpb25zOiBDZWZTaGFycC5XcGYuZGxsIC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFNPRlRXQVJFXENVUlJFTlRcQ0VGU0hBUlAuV1BGLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDE5OTA0ODY1NkU1OEQxOEY1MkJCRkFEQ0FFNDdCNjJDNzVBMDhFODkwMEU0NkMyRDQ0MjVEQ0MxQzg5QzFBQjciIFNvdXJjZUZpbGVOYW1lPSJDZWZTaGFycC5XcGYuZGxsIiBTb3VyY2VGaWxlTGVuZ3RoPSI2MjQ2NCIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjgzZTAwYTQ2LTVjYjYtNGExOC04MTI3LTI4NWIxNTRhYjQxMyIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogc3NsZWF5MzIuZGxsIC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFNPRlRXQVJFXENVUlJFTlRcTEFDTElFTlRcU1NMRUFZMzIuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4MTFCQjBDQ0VDQzU4MzNCQjhCMTQ1RjIwN0IyMzA2NTJFQTRGRUNFNjg5OTdGMkExMUE4REE2ODFDQkM3NUJBNSIgU291cmNlRmlsZU5hbWU9InNzbGVheTMyLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iNDE2NjI3IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iYTQwMjgzYzMtZmUyZS00Nzc2LTk4MmQtMGQyZjVkM2E3OWFjIiBOYW1lPSJMb2dpdGVjaCBPcHRpb25zOiBMb2dpT3B0aW9uQWkuYWlwIC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFBMVUdJTlNcQjIzMEIzNkMtQzYyNC00MEUzLUExMjAtNTQ4NkZERjRERjBFXEFJUFwzMlxMT0dJT1BUSU9OQUkuQUlQIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4RTFGREJEMUYyQzk1QjJGNjUwNTVCMjQyMURCRDdFRjRCMzg3ODk4RkM5OUJGOTdDOTQyQTExQjQ4OUM1ODJFMyIgU291cmNlRmlsZU5hbWU9IkxvZ2lPcHRpb25BaS5haXAiIFNvdXJjZUZpbGVMZW5ndGg9IjEzNzExMzYiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSJkYjNmZGI0Ni03ZDM4LTRiZmItOWI3YS03ZmM2YmY0ZWNkNWQiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IENlZlNoYXJwLkJyb3dzZXJTdWJwcm9jZXNzLkNvcmUuZGxsIC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFNPRlRXQVJFXENVUlJFTlRcQ0VGU0hBUlAuQlJPV1NFUlNVQlBST0NFU1MuQ09SRS5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHgxMzhFODk0MEY1QUQ4MDBGOEI1M0FBRjJGNjBGRkVGRTNCNUJGMEVFNDgyOTIwMzA5QjUzQzkwQ0NGNjI4RDZGIiBTb3VyY2VGaWxlTmFtZT0iQ2VmU2hhcnAuQnJvd3NlclN1YnByb2Nlc3MuQ29yZS5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjExMDk1MDQiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSJkMDJiYTQ3NS04MjU2LTQwZTctOTI2ZC0xYWM0NmQ5MjkyNTgiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IENlZlNoYXJwLkNvcmUuZGxsIC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFNPRlRXQVJFXENVUlJFTlRcQ0VGU0hBUlAuQ09SRS5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHg1NzNDNURGNzZBRjhDNzY2RURFOUNBODlEMDFCQTM4NEVFOThCNTZGOTNBNTQzMEQzODUwRUE5Q0M2RkUyNUFBIiBTb3VyY2VGaWxlTmFtZT0iQ2VmU2hhcnAuQ29yZS5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjE3MzMxMjAiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSJmNmUxZGVjYi05ZDllLTQ0MjgtYmY1NC0wMjI2YmZkMzgxOTkiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IGxpYmNlZi5kbGwgLSBIQVNIIFJVTEUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcU09GVFdBUkVcQ1VSUkVOVFxMSUJDRUYuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4MUJEMEVGN0MyOUFFN0QzQTFGN0RDQUEyQUIzREVENUE4QkRBMkRGN0YyRkUwODA4RkQzRTREODE3NUI4NDVCOCIgU291cmNlRmlsZU5hbWU9ImxpYmNlZi5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjEwNzQxODYyNCIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjU2YjhiNmNiLTE3YTAtNDMyYS05MDdiLWIxZjgwOWYwMGE2MSIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogTG9naU9wdGlvbnNQb3dlclBvaW50QWRkaW4uZGxsLmRlcGxveSAtIEhBU0ggUlVMRSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxMT0dJU0hSRFxMT0dJT1BUSU9OU1xQTFVHSU5TXEFCQzk1OTRBLTEwOTItNEEzQS04QTFELUQwNUU2MDJBMTBCOFxDT05URU5UXFBVQkxJU0hcQVBQTElDQVRJT04gRklMRVNcTE9HSU9QVElPTlNQT1dFUlBPSU5UQURESU5fOF8xMF8zM18wXExPR0lPUFRJT05TUE9XRVJQT0lOVEFERElOLkRMTC5ERVBMT1kiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHhGRDk5OUJEQzVEMEE2MTE2NjgyN0FBMEZGOTU5NUQxNTEwRUNDQzhCNkU0NzY5NjBBQzUwOEMxMTI1RTM4MzFEIiBTb3VyY2VGaWxlTmFtZT0iTG9naU9wdGlvbnNQb3dlclBvaW50QWRkaW4uZGxsLmRlcGxveSIgU291cmNlRmlsZUxlbmd0aD0iNjA0MTYiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI2MTM1NzJiNy1lZDMxLTQ3MWItYWVhOS0zMjU0YjQ1NGVlNWIiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IFdQRk1lZGlhS2l0LmRsbCAtIEhBU0ggUlVMRSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxMT0dJU0hSRFxMT0dJT1BUSU9OU1xTT0ZUV0FSRVxDVVJSRU5UXFdQRk1FRElBS0lULkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweEFEMTJFQjcwMEJENTREQ0VCMDE4ODExQjAyMDkxQzVCMDM0NjZBMDk0OEVCNTU2RkREMjhBOTM3QTIyQ0JFRjciIFNvdXJjZUZpbGVOYW1lPSJXUEZNZWRpYUtpdC5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjEzNjE5MiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9ImYxNGI1ZDRmLTg3ZGMtNGRiMS05ZmQxLWMyZGIzZjFlODkxMSIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogRVZSUHJlc2VudGVyMzIuZGxsIC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFNPRlRXQVJFXENVUlJFTlRcRVZSUFJFU0VOVEVSMzIuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4MDg4MEM3QzEwNjcwMjQ2NzlCRjhCOUJEMTNGNDc0MEY1NTlENjVGRDhERUE0OUJDMDJGMTUzRUUyM0VCQkU0MyIgU291cmNlRmlsZU5hbWU9IkVWUlByZXNlbnRlcjMyLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iNDI0OTYiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSJiOGRiZjUyYi1mNzM1LTRhOGItODc3MS1hOTM2NDBhMGY3ZDgiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IGxpYmN1cmwuZGxsIC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFNPRlRXQVJFXENVUlJFTlRcTEFDTElFTlRcTElCQ1VSTC5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHhCMEFDQTRCNzMxODg3RUM3NUY4OTgxNDgzNjZERTEwMzI1MTkzRDI3RjQ5NDQ2NDM4M0Y0NkJCNjY0QUNCN0Q4IiBTb3VyY2VGaWxlTmFtZT0ibGliY3VybC5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjM1NTg0MCIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjgyMGYzNzc4LTM0NjUtNDA3My1iYjFkLTM5MzVmZDU4MTQzNSIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogTmV3dG9uc29mdC5Kc29uLmRsbC5kZXBsb3kgLSBIQVNIIFJVTEUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcUExVR0lOU1xBQkM5NTk0QS0xMDkyLTRBM0EtOEExRC1EMDVFNjAyQTEwQjhcQ09OVEVOVFxQVUJMSVNIXEFQUExJQ0FUSU9OIEZJTEVTXExPR0lPUFRJT05TUE9XRVJQT0lOVEFERElOXzhfMTBfMzNfMFxORVdUT05TT0ZULkpTT04uRExMLkRFUExPWSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweEZCRTc5NEI2Mzg1Rjg4Q0ZFQjY4NDhFMEE1RUE3MUNGNTEwQzczRjgzQ0I5RjUyMDc2RkJGRUI1OTFDMTk3NTYiIFNvdXJjZUZpbGVOYW1lPSJOZXd0b25zb2Z0Lkpzb24uZGxsLmRlcGxveSIgU291cmNlRmlsZUxlbmd0aD0iNTI2MzM2IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI5ZGViOWE1My1mOTUyLTQ1N2YtOTU3Mi1jYzQ2YTBkYzk2NDciIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IE1JQ1JPU09GVC5PRkZJQ0UuVE9PTFMuQ09NTU9OLlY0LjAuVVRJTElUSUVTLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVCAoUikgVklTVUFMIFNUVURJTyAoUikgMjAxMCYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcUExVR0lOU1w0Q0FBNDRFQi1DREYwLTRFQ0QtQjgyMy0zOEIyODE4N0U1OUFcQ09OVEVOVFxQVUJMSVNIXEFQUExJQ0FUSU9OIEZJTEVTXExPR0lPUFRJT05TRVhDRUxBRERJTl84XzEwXzMzXzBcTUlDUk9TT0ZULk9GRklDRS5UT09MUy5DT01NT04uVjQuMC5VVElMSVRJRVMuRExMLkRFUExPWSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlQgKFIpIFZJU1VBTCBTVFVESU8gKFIpIDIwMTAiIEJpbmFyeU5hbWU9Ik1JQ1JPU09GVC5PRkZJQ0UuVE9PTFMuQ09NTU9OLlY0LjAuVVRJTElUSUVTLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iMTgzZWU5N2YtNjZlMS00ZWJmLWIwNGQtNDA4MWJjMzAzMmNlIiBOYW1lPSJMb2dpdGVjaCBPcHRpb25zOiBMT0dJIFVJIFVUSUxJVElFUyIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IExPR0kgVUkgVVRJTElUSUVTJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1MT0dJVEVDSCBJTkMsIEw9TkVXQVJLLCBTPUNBTElGT1JOSUEsIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcUHJvZ3JhbURhdGFcTG9naXNocmRcTG9naU9wdGlvbnMiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1MT0dJVEVDSCBJTkMsIEw9TkVXQVJLLCBTPUNBTElGT1JOSUEsIEM9VVMiIFByb2R1Y3ROYW1lPSJMT0dJIFVJIFVUSUxJVElFUyIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iZGU0MDhmNjctMTEyNC00ZmMxLTgxMzQtMTVhYjRiMzdjMjk3IiBOYW1lPSJMb2dpdGVjaCBPcHRpb25zOiBWU1RPRUUxMDAuVExCIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTAmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFBMVUdJTlNcVlNUT1wzMkJJVFxWU1RPRUUxMDAuVExCIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDEwIiBCaW5hcnlOYW1lPSJWU1RPRUUxMDAuVExCIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSIwZjYxZmJhOS1iZTI0LTRiMzItOWY0ZC0zNDQ4Y2YxNWFiMGIiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IFZTVE9FRS5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxMCYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcUExVR0lOU1xWU1RPXDY0QklUXFZTVE9FRS5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTAiIEJpbmFyeU5hbWU9IlZTVE9FRS5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjFlNTQ2N2QyLTUyZjQtNDE3Mi04Y2E2LWVmMWYwYzM3MGE2NiIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogVU5JRllJTkcgU09GVFdBUkUiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBVTklGWUlORyBTT0ZUV0FSRSYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TE9HSVRFQ0gsIEw9TkVXQVJLLCBTPUNBTElGT1JOSUEsIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcUHJvZ3JhbURhdGFcTG9naXNocmRcTG9naU9wdGlvbnMiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1MT0dJVEVDSCwgTD1ORVdBUkssIFM9Q0FMSUZPUk5JQSwgQz1VUyIgUHJvZHVjdE5hbWU9IlVOSUZZSU5HIFNPRlRXQVJFIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI1NjkzYjE4My1lZjI4LTQwZGUtOWQ2Yi1jMTllYzEzMzRhZTQiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IE1TVkNQMTQwXzEuRExMIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTcmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFNPRlRXQVJFXENVUlJFTlRcTVNWQ1AxNDBfMS5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTciIEJpbmFyeU5hbWU9Ik1TVkNQMTQwXzEuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJkOTI2OGI5MC1kYzczLTQ1YmUtYTJmNi1hMmJiOGFkZjgzZjciIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IFZTVE9JTlNUQUxMRVJVSS5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxMCYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcUExVR0lOU1xWU1RPXDY0QklUXDEwLjBcMTAzM1xWU1RPSU5TVEFMTEVSVUkuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDEwIiBCaW5hcnlOYW1lPSJWU1RPSU5TVEFMTEVSVUkuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSIwMDk3ZTgxNS00ZTZhLTQyNDYtYjNiNC0zNTJmOGMwZGNjYjYiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IE1TVkNQMTQwXzIuRExMIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTcmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFNPRlRXQVJFXENVUlJFTlRcTVNWQ1AxNDBfMi5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTciIEJpbmFyeU5hbWU9Ik1TVkNQMTQwXzIuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI1ZWM1OTUzNC03YTYyLTRhNTgtYTZiNC1kMDhiMTMzMzBlNGEiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IExPR0kgT1ZFUkxBWSBCTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IExPR0kgT1ZFUkxBWSBCTCYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TE9HSVRFQ0ggSU5DLCBMPU5FV0FSSywgUz1DQUxJRk9STklBLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFByb2dyYW1EYXRhXExvZ2lzaHJkXExvZ2lPcHRpb25zIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TE9HSVRFQ0ggSU5DLCBMPU5FV0FSSywgUz1DQUxJRk9STklBLCBDPVVTIiBQcm9kdWN0TmFtZT0iTE9HSSBPVkVSTEFZIEJMIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI1NWYzM2E0OS01OTdkLTRmZjctOTQyMS1iNzYyYmIyZTg3M2IiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IE1TVkNSMTIwLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDEzJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxMT0dJU0hSRFxMT0dJT1BUSU9OU1xTT0ZUV0FSRVxDVVJSRU5UXExBQ0xJRU5UXE1TVkNSMTIwLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxMyIgQmluYXJ5TmFtZT0iTVNWQ1IxMjAuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJhNzVlZTA1MS1mM2ZjLTRkYjUtYWFmZS02OTcyNTE2YmQyODAiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IDZCMzVBIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogNkIzNUEmI3hEOyYjeEE7UHVibGlzaGVyOiBPPUxPR0lURUNIIElOQywgTD1ORVdBUkssIFM9Q0FMSUZPUk5JQSwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluOiBDOlxQcm9ncmFtRGF0YVxMb2dpc2hyZFxMb2dpT3B0aW9ucyIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPUxPR0lURUNIIElOQywgTD1ORVdBUkssIFM9Q0FMSUZPUk5JQSwgQz1VUyIgUHJvZHVjdE5hbWU9IjZCMzVBIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI0ZWE5YzcxMS1lMjY4LTQyNWYtOWFiZS04MDg3MzNlMmRhOGYiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IFZDQ09STElCMTQwLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDE3JiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxMT0dJU0hSRFxMT0dJT1BUSU9OU1xTT0ZUV0FSRVxDVVJSRU5UXFZDQ09STElCMTQwLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxNyIgQmluYXJ5TmFtZT0iVkNDT1JMSUIxNDAuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJlYjU5NTliMy00ZTFiLTQ3ZjQtYWM2YS02MzcwODFjNTZkNzciIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IDQwNzUiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiA0MDc1JiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1MT0dJVEVDSCBJTkMsIEw9TkVXQVJLLCBTPUNBTElGT1JOSUEsIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcUHJvZ3JhbURhdGFcTG9naXNocmRcTG9naU9wdGlvbnMiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1MT0dJVEVDSCBJTkMsIEw9TkVXQVJLLCBTPUNBTElGT1JOSUEsIEM9VVMiIFByb2R1Y3ROYW1lPSI0MDc1IiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSIyYjU5M2VhYi04NDk0LTRkZjctYjMyNi01YWRmNmQwZmQzYzciIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IDQwNzYiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiA0MDc2JiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1MT0dJVEVDSCBJTkMsIEw9TkVXQVJLLCBTPUNBTElGT1JOSUEsIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcUHJvZ3JhbURhdGFcTG9naXNocmRcTG9naU9wdGlvbnMiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1MT0dJVEVDSCBJTkMsIEw9TkVXQVJLLCBTPUNBTElGT1JOSUEsIEM9VVMiIFByb2R1Y3ROYW1lPSI0MDc2IiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI2MTk2NzIzNS05MWE3LTRiOGMtYWNkNy0xYzJjMjQ3NDFmM2MiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IFZTVE9FRTkwLlRMQiIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDEwJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxMT0dJU0hSRFxMT0dJT1BUSU9OU1xQTFVHSU5TXFZTVE9cMzJCSVRcVlNUT0VFOTAuVExCIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDEwIiBCaW5hcnlOYW1lPSJWU1RPRUU5MC5UTEIiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjIzMDFlMmM3LTNlNTMtNGU4ZC1iYWVlLTA4ZGE0YjY5NTk2MiIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogVlNUT0xPQURFUi5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxMCYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcUExVR0lOU1xWU1RPXDY0QklUXDEwLjBcVlNUT0xPQURFUi5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTAiIEJpbmFyeU5hbWU9IlZTVE9MT0FERVIuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI0NTQwMzU4Ni00ZWRiLTRlMDYtYWY1My0yMzI0YzE3MDYzN2EiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IE1TVkNSMTEwLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDEyJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxMT0dJU0hSRFxMT0dJT1BUSU9OU1xTT0ZUV0FSRVxDVVJSRU5UXExBQ0xJRU5UXE1TVkNSMTEwLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxMiIgQmluYXJ5TmFtZT0iTVNWQ1IxMTAuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSIzNDhiMGJmMS03NDYzLTQ1NjAtYjlmYS00ZGY3MzRmMjBhZWYiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IFVJV1JBUFBFUlJFUy5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxMCYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcUExVR0lOU1xWU1RPXDY0QklUXDEwLjBcTUlDUk9TT0ZUIFZJU1VBTCBTVFVESU8gMjAxMCBUT09MUyBGT1IgT0ZGSUNFIFJVTlRJTUUgKFg2NClcSU5TVEFMTC5SRVMuMTAyNS5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTAiIEJpbmFyeU5hbWU9IlVJV1JBUFBFUlJFUy5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjdlMDM3NGRkLWZlNzYtNGJlNi1iNTdlLTJhOTA0ODEwYTgxMCIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogTE9HSUFOQUxZVElDUyIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IExPR0lBTkFMWVRJQ1MmI3hEOyYjeEE7UHVibGlzaGVyOiBPPUxPR0lURUNIIElOQywgTD1ORVdBUkssIFM9Q0FMSUZPUk5JQSwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluOiBDOlxQcm9ncmFtRGF0YVxMb2dpc2hyZFxMb2dpT3B0aW9ucyIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPUxPR0lURUNIIElOQywgTD1ORVdBUkssIFM9Q0FMSUZPUk5JQSwgQz1VUyIgUHJvZHVjdE5hbWU9IkxPR0lBTkFMWVRJQ1MiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjI5MjQzYjEzLTMzODctNDA4Ny04ZjJiLWY2ZTA0YmFlZGY5ZiIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogRDNEQ09NUElMRVJfNDcuRExMIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0mI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFNPRlRXQVJFXENVUlJFTlRcRDNEQ09NUElMRVJfNDcuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNIiBCaW5hcnlOYW1lPSJEM0RDT01QSUxFUl80Ny5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImVkNmMzODlmLTBkMzctNGY5NS04NWVjLTlmZjhkMTJiZWIxMSIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogVkNSVU5USU1FMTQwLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDE3JiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxMT0dJU0hSRFxMT0dJT1BUSU9OU1xTT0ZUV0FSRVxDVVJSRU5UXFZDUlVOVElNRTE0MC5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTciIEJpbmFyeU5hbWU9IlZDUlVOVElNRTE0MC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImY2MWI1ZWM5LTNiNmEtNGI5NC04YTI3LTAwMDMxZjdmMTcwNCIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogTVNWQ1AxNDAuRExMIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTcmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFBST0dSQU1EQVRBXExPR0lTSFJEXExPR0lPUFRJT05TXFNPRlRXQVJFXENVUlJFTlRcTVNWQ1AxNDAuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDE3IiBCaW5hcnlOYW1lPSJNU1ZDUDE0MC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjcwNzc5ZGZkLTVjMzQtNDY0ZS04ZTFlLWM3OTVmZWI4MzFmOSIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogVlNUT0xPQURFUlVJLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDEwJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxMT0dJU0hSRFxMT0dJT1BUSU9OU1xQTFVHSU5TXFZTVE9cNjRCSVRcMTAuMFwxMDMzXFZTVE9MT0FERVJVSS5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTAiIEJpbmFyeU5hbWU9IlZTVE9MT0FERVJVSS5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjlmODg1ZjlkLWRhYjctNGEwMy1iYTBlLWU5ZDM4ZjdlYzhmZCIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogNkIzNUIiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiA2QjM1QiYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TE9HSVRFQ0ggSU5DLCBMPU5FV0FSSywgUz1DQUxJRk9STklBLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFByb2dyYW1EYXRhXExvZ2lzaHJkXExvZ2lPcHRpb25zIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TE9HSVRFQ0ggSU5DLCBMPU5FV0FSSywgUz1DQUxJRk9STklBLCBDPVVTIiBQcm9kdWN0TmFtZT0iNkIzNUIiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjJjNzNjYjc5LWI0MzMtNGViYy1hYzRjLWJkMjY3NzI5ZjM4OCIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogNDA3NyIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IDQwNzcmI3hEOyYjeEE7UHVibGlzaGVyOiBPPUxPR0lURUNIIElOQywgTD1ORVdBUkssIFM9Q0FMSUZPUk5JQSwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluOiBDOlxQcm9ncmFtRGF0YVxMb2dpc2hyZFxMb2dpT3B0aW9ucyIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPUxPR0lURUNIIElOQywgTD1ORVdBUkssIFM9Q0FMSUZPUk5JQSwgQz1VUyIgUHJvZHVjdE5hbWU9IjQwNzciIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9Ijc4ZDRlNjI5LTBjNDItNDgwMy05NmYxLWU4NzYyN2ExMTVhMiIgTmFtZT0iTG9naXRlY2ggT3B0aW9uczogVlNUT01FU1NBR0VQUk9WSURFUi5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxMCYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcUExVR0lOU1xWU1RPXDY0QklUXDEwLjBcVlNUT01FU1NBR0VQUk9WSURFUi5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTAiIEJpbmFyeU5hbWU9IlZTVE9NRVNTQUdFUFJPVklERVIuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJjYzhiMDQwMy1kMmM4LTQwYjYtYTVjOC01MjJhMDhiMjI2MGIiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IExPR0lPUFRJT05TIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTE9HSU9QVElPTlMmI3hEOyYjeEE7UHVibGlzaGVyOiBPPUxPR0lURUNIIElOQywgTD1ORVdBUkssIFM9Q0FMSUZPUk5JQSwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluOiBDOlxQcm9ncmFtRGF0YVxMb2dpc2hyZFxMb2dpT3B0aW9ucyIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPUxPR0lURUNIIElOQywgTD1ORVdBUkssIFM9Q0FMSUZPUk5JQSwgQz1VUyIgUHJvZHVjdE5hbWU9IkxPR0lPUFRJT05TIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI2ZDdkODhhMy0zOTcwLTRjNzAtODkyZC1hZTlmNWVhNjI4ZGUiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IFVDUlRCQVNFLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxQUk9HUkFNREFUQVxMT0dJU0hSRFxMT0dJT1BUSU9OU1xTT0ZUV0FSRVxDVVJSRU5UXFVDUlRCQVNFLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSIgQmluYXJ5TmFtZT0iVUNSVEJBU0UuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSIzY2Q5YjBlZC00NGY3LTQxMWQtODI1Yy04N2I0YWEyMzY5ZTciIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IExPR0lURUNIIE9QVElPTlMiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBMT0dJVEVDSCBPUFRJT05TJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1MT0dJVEVDSCBJTkMsIEw9TkVXQVJLLCBTPUNBTElGT1JOSUEsIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcUHJvZ3JhbURhdGFcTG9naXNocmRcTG9naU9wdGlvbnMiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1MT0dJVEVDSCBJTkMsIEw9TkVXQVJLLCBTPUNBTElGT1JOSUEsIEM9VVMiIFByb2R1Y3ROYW1lPSJMT0dJVEVDSCBPUFRJT05TIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJjMDdmNjcxNy02YTg3LTQwZjUtOGJjMi0yYTJjNzk2YzNlM2QiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IEFQSVNFVFNUVUIiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcU09GVFdBUkVcQ1VSUkVOVFxBUEktTVMtV0lOLUNPUkUtQ09OU09MRS1MMS0xLTAuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNIiBCaW5hcnlOYW1lPSJBUElTRVRTVFVCIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJkZGU0Yzc3OS1mNTA5LTQ4ODQtYjc1ZC1jOTdmYmM0NmZkZDMiIE5hbWU9IkxvZ2l0ZWNoIE9wdGlvbnM6IENPTkNSVDE0MC5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4gMjAxNyYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcUFJPR1JBTURBVEFcTE9HSVNIUkRcTE9HSU9QVElPTlNcU09GVFdBUkVcQ1VSUkVOVFxDT05DUlQxNDAuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDE3IiBCaW5hcnlOYW1lPSJDT05DUlQxNDAuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iNDNhNDI3YmMtOTZjMS00Mjg5LWI0NjEtMDg1ZDlhMGU4NzExIiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IEZpbGVTeW5jU3FsaXRlMy5kbGwgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OUEFSS0VSXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDIxLjE1MC4wNzI1LjAwMDFcRklMRVNZTkNTUUxJVEUzLkRMTCYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4QUY0MzEwM0NGMUJBN0VGMjc5REJGMjdCQzY2NUVCODY2OTZFMEUyREZFOUUyNjRCRTg4NzdEQjZGQjZFOUU5MiIgU291cmNlRmlsZU5hbWU9IkZpbGVTeW5jU3FsaXRlMy5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjUxNjQ4MCIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9ImNiNmRjNDRhLWNiNDMtNDc4Yy05MTQ1LWJkNGQzM2IwODQ2MyIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBNaWNyb3NvZnQuTnVjbGV1cy5IdHRwU3ZyLmRsbCAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05QQVJLRVJcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMjEuMTUwLjA3MjUuMDAwMVxNSUNST1NPRlQuTlVDTEVVUy5IVFRQU1ZSLkRMTCYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4MzIwREJERjgyNzlCQ0RDMzM2NDgyODY5QzhERjc5OUI3MTUwQzJDNTY3MjAzRUYzNzFCOTQ1MjdBREI0RjVDRCIgU291cmNlRmlsZU5hbWU9Ik1pY3Jvc29mdC5OdWNsZXVzLkh0dHBTdnIuZGxsIiBTb3VyY2VGaWxlTGVuZ3RoPSI1MzE4MzIiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI3MDEyMDhhYy0zZTljLTRlMWYtOThmNS04MWNkMWNjZDdjOWUiIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogRmlsZVN5bmNTZXJ2aWNlLmRsbCAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05QQVJLRVJcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMjEuMTUwLjA3MjUuMDAwMVxGSUxFU1lOQ1NFUlZJQ0UuRExMJiN4RDsmI3hBO1NpZ25lZCBieSBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMsIGJ1dCBtaXNzaW5nIHZlcnNpb24gaW5mb3JtYXRpb24iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHg5QTkyMjlENUIxOTY2OUUxNjU5OTY5M0QzOEQ1QUEyN0ZBODZFRjI2NTI2RjE5RERBQUJEOTU5MTY1Qjk4NUVCIiBTb3VyY2VGaWxlTmFtZT0iRmlsZVN5bmNTZXJ2aWNlLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iMjA3MDkwNCIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjBlMmJkN2QyLTdjNTEtNGYwMS1hOWVmLTEzY2QxMTlkM2U3MiIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBNaWNyb3NvZnQuTnVjbGV1cy5XZWJTb2NrZXRDbGllbnQuZGxsIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlBBUktFUlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxPTkVEUklWRVwyMS4xNTAuMDcyNS4wMDAxXE1JQ1JPU09GVC5OVUNMRVVTLldFQlNPQ0tFVENMSUVOVC5ETEwmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweEVENEUyNjFDRENEMEE0NkVDQzExMERFQkM3MkVFRTQ3MDFGQzdCM0YwOUQyOENGNkE0NTNERjFBODVFMjM4RTYiIFNvdXJjZUZpbGVOYW1lPSJNaWNyb3NvZnQuTnVjbGV1cy5XZWJTb2NrZXRDbGllbnQuZGxsIiBTb3VyY2VGaWxlTGVuZ3RoPSI4NDA1NzYiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI5MDNmZjc3Mi05MGUzLTRlMTctODc0OC01NTBlODRkZWM2ZGYiIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogTWljcm9zb2Z0Lk51Y2xldXMuQ2FsYy5kbGwgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OUEFSS0VSXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDIxLjE1MC4wNzI1LjAwMDFcTUlDUk9TT0ZULk5VQ0xFVVMuQ0FMQy5ETEwmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDRCRkRCQkI5QTQ0NTI4RUVFQUNFMUU2OUVENDcxRUE5NDRCMjZFQ0RFRjBFMkQxQjMxQjhBQzgzQUQzRTY3RUQiIFNvdXJjZUZpbGVOYW1lPSJNaWNyb3NvZnQuTnVjbGV1cy5DYWxjLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iMTAzMDUyOCIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iYzk5YmUwNjYtYzc3NS00YzAxLWJjM2QtZTc4ZmZkMDk4YjdlIiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IE1JQ1JPU09GVCBOVUNMRVVTIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUIE5VQ0xFVVMmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcQWFyb25QYXJrZXJcQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcT25lRHJpdmUiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUIE5VQ0xFVVMiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImU2ZGJiZTA2LWZiZDAtNDBlOS1iZDMzLTk2ZmRmNWQxMjZjZiIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBNSUNST1NPRlQgRURHRSBFTUJFRERFRCBCUk9XU0VSIFdFQlZJRVcgTE9BREVSIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUIEVER0UgRU1CRURERUQgQlJPV1NFUiBXRUJWSUVXIExPQURFUiYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluOiBDOlxVc2Vyc1xBYXJvblBhcmtlclxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxPbmVEcml2ZSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlQgRURHRSBFTUJFRERFRCBCUk9XU0VSIFdFQlZJRVcgTE9BREVSIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJiM2YwN2YzYS00ZGVmLTQ1ZGYtOWQ1My1hNGQ3M2RiMzFlNGMiIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogUVQ1IiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogUVQ1JiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXEFhcm9uUGFya2VyXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XE9uZURyaXZlIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9IlFUNSIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iOWFjYjExZTItMmJjZC00YjJiLWE3NzItMjc5OGFmODNjYzc0IiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IE1TVkNQMTQwX0FUT01JQ19XQUlULkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcVVNFUlNcQUFST05QQVJLRVJcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMjEuMTUwLjA3MjUuMDAwMVxNU1ZDUDE0MF9BVE9NSUNfV0FJVC5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIiBCaW5hcnlOYW1lPSJNU1ZDUDE0MF9BVE9NSUNfV0FJVC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjIyZTc5MjU3LTYyYjctNDY1Yi1iODBhLTMyMjAyNzE2ZDE1MyIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBBUElTRVRTVFVCIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0mI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFVTRVJTXEFBUk9OUEFSS0VSXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDIxLjE1MC4wNzI1LjAwMDFcQVBJLU1TLVdJTi1DT1JFLUNPTlNPTEUtTDEtMS0wLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSIgQmluYXJ5TmFtZT0iQVBJU0VUU1RVQiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iYTAzZTI2M2QtZDAwOC00ZDNiLWE4MDItNzIyODhiZjUwMThmIiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IFZDUlVOVElNRTE0MC5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4mI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFVTRVJTXEFBUk9OUEFSS0VSXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDIxLjE1MC4wNzI1LjAwMDFcVkNSVU5USU1FMTQwLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBWSVNVQUwgU1RVRElPwq4iIEJpbmFyeU5hbWU9IlZDUlVOVElNRTE0MC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjI2OWMxMWY2LWUxZjgtNGZkMi04MjE3LWVhY2MxZWRjYjU4OSIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBNSUNST1NPRlQuT0ZGSUNFLklSTS5PRkNQUk9URUNUT1IiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlQuT0ZGSUNFLklSTS5PRkNQUk9URUNUT1ImI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcQWFyb25QYXJrZXJcQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcT25lRHJpdmUiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZULk9GRklDRS5JUk0uT0ZDUFJPVEVDVE9SIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI3ODRkYzBiNi1hOTViLTRlNDUtYmNhMy1hYTgyYWVmZWRjMzciIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogTUlDUk9TT0ZUwqkgQURBTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKpIEFEQUwmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcQWFyb25QYXJrZXJcQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcT25lRHJpdmUiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwqkgQURBTCIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iYWQyM2E3YjgtODU1My00MTMyLWE5MzUtZjYyZmI3ZWQ2NGRhIiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IExJQkVHTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IExJQkVHTCYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluOiBDOlxVc2Vyc1xBYXJvblBhcmtlclxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxPbmVEcml2ZSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJMSUJFR0wiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjM3Y2MzODE1LTEyMjktNDQwMy1iZTc2LTdkMmUyNDhkZjM3ZiIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBMSUJHTEVTVjIiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBMSUJHTEVTVjImI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcQWFyb25QYXJrZXJcQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcT25lRHJpdmUiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTElCR0xFU1YyIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSIwNmRjZjNjMy1hNDk0LTQxOTAtOTAzYi00YWZiYzlkZDRlM2QiIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogTUlDUk9TT0ZULk9GRklDRS5JUk0uTVNPUFJPVEVDVE9SIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZULk9GRklDRS5JUk0uTVNPUFJPVEVDVE9SJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXEFhcm9uUGFya2VyXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XE9uZURyaXZlIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVC5PRkZJQ0UuSVJNLk1TT1BST1RFQ1RPUiIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iNzA5YzBhNjQtZTQ3OC00MmU3LWJkOWYtNDRmOTdjNWQwZmJmIiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IFRIRSBPUEVOU1NMIFRPT0xLSVQiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBUSEUgT1BFTlNTTCBUT09MS0lUJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXEFhcm9uUGFya2VyXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XE9uZURyaXZlIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9IlRIRSBPUEVOU1NMIFRPT0xLSVQiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjVhOWQ2MzlmLWExYWEtNDE3Ni04ZjJlLTRjMjFjOTIyYjA4MyIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBNSUNST1NPRlQgQUQgUk1TIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUIEFEIFJNUyYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluOiBDOlxVc2Vyc1xBYXJvblBhcmtlclxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxPbmVEcml2ZSIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlQgQUQgUk1TIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJiYmM0Y2ZmOS02Yjk5LTQ4MjQtYTljOC01MzJjM2RmY2VjZDEiIE5hbWU9Ik1pY3Jvc29mdCBPbmVEcml2ZTogTUlDUk9TT0ZUIE9ORURSSVZFIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUIE9ORURSSVZFJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXEFhcm9uUGFya2VyXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XE9uZURyaXZlIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVCBPTkVEUklWRSIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iZGNjOTMwMjktMmE1Ny00YzIyLWJmMDYtOWM1NjlkOTk2Njk4IiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IE1JQ1JPU09GVC5BSVAuUERGUFJPVEVDVE9SIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZULkFJUC5QREZQUk9URUNUT1ImI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcQWFyb25QYXJrZXJcQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcT25lRHJpdmUiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZULkFJUC5QREZQUk9URUNUT1IiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjNjM2IxMGRmLTRiOTMtNDIxZi1iM2FiLTMzYTVjOWYzOWI1OSIgTmFtZT0iTWljcm9zb2Z0IE9uZURyaXZlOiBVQ1JUQkFTRS5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcVVNFUlNcQUFST05QQVJLRVJcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMjEuMTUwLjA3MjUuMDAwMVxVQ1JUQkFTRS5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0iIEJpbmFyeU5hbWU9IlVDUlRCQVNFLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iYTcxNzBlMjQtZDVlZi00M2ZiLTg0NjQtNDU2NGVjODY1MTI0IiBOYW1lPSJNaWNyb3NvZnQgT25lRHJpdmU6IE1TVkNQMTQwLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcVVNFUlNcQUFST05QQVJLRVJcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMjEuMTUwLjA3MjUuMDAwMVxNU1ZDUDE0MC5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIiBCaW5hcnlOYW1lPSJNU1ZDUDE0MC5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSJkOTg5NDY5YS01MzljLTRlOGMtOTIzYi1mZWRlMWQ4NGU0MTIiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogbW9kZXJuLW9zdXRpbHMubm9kZSAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05QQVJLRVJcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcVEVBTVNcQ1VSUkVOVFxSRVNPVVJDRVNcQVBQLkFTQVIuVU5QQUNLRURcTk9ERV9NT0RVTEVTXE1PREVSTi1PU1VUSUxTXEJVSUxEXFJFTEVBU0VcTU9ERVJOLU9TVVRJTFMuTk9ERSYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4OTU3RkMyNDZGMkNDNDgzNkZBNzg1REUyOEI3OTY2MDMxNDhFMzAwNENCODBBNzY0OTk1NjI3QTg3MjJDRTY3RSIgU291cmNlRmlsZU5hbWU9Im1vZGVybi1vc3V0aWxzLm5vZGUiIFNvdXJjZUZpbGVMZW5ndGg9IjIzMDY0OCIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjJkNTU2Zjc3LWUxYTQtNDM3MS05NjAxLWQxYmEyY2I0ODhmMiIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBNaWNyb3NvZnQuQXBwbGljYXRpb25zLlRlbGVtZXRyeS5XaW5kb3dzLmRsbCAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05QQVJLRVJcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcVEVBTVNcQ1VSUkVOVFxSRVNPVVJDRVNcTUVFVElORy1BRERJTlwxLjAuMjExMDUuMVxYNjRcTUlDUk9TT0ZULkFQUExJQ0FUSU9OUy5URUxFTUVUUlkuV0lORE9XUy5ETEwmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweENGN0M1NDM0RTNCQTQ3RUNDNkZFMkVGRTcyOTBCRTcyNUU2NEM0MTRCRDFDOTYxOTJGMTE4QjBCQTNFNzA1RTMiIFNvdXJjZUZpbGVOYW1lPSJNaWNyb3NvZnQuQXBwbGljYXRpb25zLlRlbGVtZXRyeS5XaW5kb3dzLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iMzA5NTMyMCIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9ImY1NTY4Mjk2LWRlOTUtNDVjMS1iM2UwLTY2OWZhMGZhNDA5MyIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiByZWdpc3RyeS11dGlscy5ub2RlIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlBBUktFUlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xBUFAuQVNBUi5VTlBBQ0tFRFxOT0RFX01PRFVMRVNcUkVHSVNUUlktVVRJTFNcQlVJTERcUkVMRUFTRVxSRUdJU1RSWS1VVElMUy5OT0RFJiN4RDsmI3hBO1NpZ25lZCBieSBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMsIGJ1dCBtaXNzaW5nIHZlcnNpb24gaW5mb3JtYXRpb24iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHhDODg2MUI3MDM1REQwNTZFN0U3MUYyNDMyQjk1MEI3MDg4NUEzNEMyNzJEQUZGMEI3RTg1MDIxODA3N0QyOUI2IiBTb3VyY2VGaWxlTmFtZT0icmVnaXN0cnktdXRpbHMubm9kZSIgU291cmNlRmlsZUxlbmd0aD0iMjAxNDY0IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iZWRjNjc2MzMtYzdjYS00ZDgxLTk3ZjgtZDVlZWE5ZTBjMGMzIiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IHJ0bWJ3ZS5kbGwgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OUEFSS0VSXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXFRFQU1TXENVUlJFTlRcUkVTT1VSQ0VTXEFQUC5BU0FSLlVOUEFDS0VEXE5PREVfTU9EVUxFU1xTTElNQ09SRVxCSU5cUlRNQldFLkRMTCYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4RTZCRDBDM0VEOEEyQjBCQThCQjRCODM2Qzc5RjI0RTM0MzJBNTg4NTlDOTRFMjk3MTZGMzQ5RTk0ODk1ODg4MSIgU291cmNlRmlsZU5hbWU9InJ0bWJ3ZS5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjE5MjI0OCIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9Ijg5ZDY1MjNmLWQ4ZWUtNDIwYi04ZTJlLTViYjg5OTMzMmM3YSIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBwYWNrYWdlLXV0aWxzLm5vZGUgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OUEFSS0VSXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXFRFQU1TXENVUlJFTlRcUkVTT1VSQ0VTXEFQUC5BU0FSLlVOUEFDS0VEXE5PREVfTU9EVUxFU1xATVNURUFNU1xFTEVDVFJPTi1NT0RVTEVTLVBBQ0tBR0UtVVRJTFNcQlVJTERcUkVMRUFTRVxQQUNLQUdFLVVUSUxTLk5PREUmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDAyRURFQjdDRDNDRUMyNkFBQjI4RjdFQjMwNDU2MjkxQkIxMjIwREQyQkEzQ0U1NkQ4Q0VCMTVDQTREQ0QzMDUiIFNvdXJjZUZpbGVOYW1lPSJwYWNrYWdlLXV0aWxzLm5vZGUiIFNvdXJjZUZpbGVMZW5ndGg9IjE3MzMzNiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjliYjJhZjM4LTJlNmEtNDM1My1hMjJkLWJiYzEwOTFjNzBhMiIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBrZXl0YXIubm9kZSAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05QQVJLRVJcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcVEVBTVNcQ1VSUkVOVFxSRVNPVVJDRVNcQVBQLkFTQVIuVU5QQUNLRURcTk9ERV9NT0RVTEVTXEtFWVRBUjRcQlVJTERcUkVMRUFTRVxLRVlUQVIuTk9ERSYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4MzQ0QTU1OTU5REY1OTI5RkFFM0MxRERGM0QyNDVBMDQwRjJBMkZFOUU0RERBMDE1MUM0MThBMTZDRUMzODFDNCIgU291cmNlRmlsZU5hbWU9ImtleXRhci5ub2RlIiBTb3VyY2VGaWxlTGVuZ3RoPSIzNzA4NTYiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSIyYjhmMTZmMS04ZmQwLTQxNzUtODEwZC1hYjNkY2E4Y2VjMDIiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogbWVkaWEtaGlkLm5vZGUgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OUEFSS0VSXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXFRFQU1TXENVUlJFTlRcUkVTT1VSQ0VTXEFQUC5BU0FSLlVOUEFDS0VEXE5PREVfTU9EVUxFU1xNRURJQS1ISURcQlVJTERcUkVMRUFTRVxNRURJQS1ISUQuTk9ERSYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4RjgwOTdFMTU1NzI4NDM2NzU1QjJENkUyRjFGMkZGMDAwM0QwMDhEQTg4RUZCRjIxQkFCNEYxOTAwQkNCOUUxQiIgU291cmNlRmlsZU5hbWU9Im1lZGlhLWhpZC5ub2RlIiBTb3VyY2VGaWxlTGVuZ3RoPSI5NjMzNDQiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSJhNjYwODUyMS00MTA0LTRmZjQtODAzOS1iMmFhMDA5OTliMmMiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogZmZtcGVnLmRsbCAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05QQVJLRVJcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcVEVBTVNcQ1VSUkVOVFxGRk1QRUcuRExMJiN4RDsmI3hBO1NpZ25lZCBieSBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMsIGJ1dCBtaXNzaW5nIHZlcnNpb24gaW5mb3JtYXRpb24iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHgzM0YwMzJGM0U0QTVDMEE3MjI3QTk4NzFFRjEzNzg2OENDNzBFQkE3OThBNDVCRUYyRkU0NTUxNUZCNDhDMkRCIiBTb3VyY2VGaWxlTmFtZT0iZmZtcGVnLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iMjcyNjExMiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjQ5NjBhZWFkLTdmZWItNDUzNi1hOGRhLTRhNTJjMTRlMGEzOSIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBzcGVsbGNoZWNrZXIubm9kZSAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05QQVJLRVJcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcVEVBTVNcQ1VSUkVOVFxSRVNPVVJDRVNcQVBQLkFTQVIuVU5QQUNLRURcTk9ERV9NT0RVTEVTXE5PREUtU1BFTExDSEVDS1JcQlVJTERcUkVMRUFTRVxTUEVMTENIRUNLRVIuTk9ERSYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4NTE2RTgzMTJEODRFRTI2M0ZEODcyQzE0NTIwMUYyNjJFNkYyQzk3NUE3RkVDMkFFREZFMDg2OUE4RDNDMkJFRSIgU291cmNlRmlsZU5hbWU9InNwZWxsY2hlY2tlci5ub2RlIiBTb3VyY2VGaWxlTGVuZ3RoPSI1MjkxMjAiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI1ODg2MTNhNi1mY2U1LTQyYWItYmU0OC1kZTJiZTZlMWYwMzQiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogbm90aWZpY2F0aW9uc19iaW5kaW5ncy5ub2RlIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlBBUktFUlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xBUFAuQVNBUi5VTlBBQ0tFRFxOT0RFX01PRFVMRVNcQE1JQ1JPU09GVFxFTEVDVFJPTi1XSU5ET1dTLUlOVEVSQUNUSVZFLU5PVElGSUNBVElPTlNcQlVJTERcUkVMRUFTRVxOT1RJRklDQVRJT05TX0JJTkRJTkdTLk5PREUmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweEQwRjNFM0MyRURDMDcxQjg2MERGNTg4ODQ2RUU4NTUzQjE3N0I3NkQzMjg2RjlGOTM4Mjg5OUFENDM5MTMwQTUiIFNvdXJjZUZpbGVOYW1lPSJub3RpZmljYXRpb25zX2JpbmRpbmdzLm5vZGUiIFNvdXJjZUZpbGVMZW5ndGg9IjQyMjU2IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iMmU2YjEzMzgtMWNlNi00YzRmLThhZTUtZTZlYmI1ZWY5MDlmIiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IGFkYWwtd2luLm5vZGUgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OUEFSS0VSXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXFRFQU1TXENVUlJFTlRcUkVTT1VSQ0VTXEFQUC5BU0FSLlVOUEFDS0VEXE5PREVfTU9EVUxFU1xBREFMMy1XSU5cQlVJTERcUkVMRUFTRVxBREFMLVdJTi5OT0RFJiN4RDsmI3hBO1NpZ25lZCBieSBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMsIGJ1dCBtaXNzaW5nIHZlcnNpb24gaW5mb3JtYXRpb24iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHg2QjA1RUNCMTNEM0ZCQzc0NTlDNjFGRkU5ODJCMzdGODZFOTA5QTVGRDRCQjk5MkYyNzJBNTNDQTFDNzU4QkM5IiBTb3VyY2VGaWxlTmFtZT0iYWRhbC13aW4ubm9kZSIgU291cmNlRmlsZUxlbmd0aD0iMTM1NDE2IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iZjY4MThjNGEtYWRjOC00NGI0LTg3OTUtM2FhNWQ4OGVkNGIwIiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IG5hdGl2ZS11dGlscy5ub2RlIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlBBUktFUlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xBUFAuQVNBUi5VTlBBQ0tFRFxOT0RFX01PRFVMRVNcTkFUSVZFLVVUSUxTLVYyXEJVSUxEXFJFTEVBU0VcTkFUSVZFLVVUSUxTLk5PREUmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweEQzQjNCMzhBNTVFMERGODZFRUMzNUQ0MjA3REVDNEFDRDZFRTQzQjZBNjVEODAyNDkxODYyQ0UwMTk0QUE4NzYiIFNvdXJjZUZpbGVOYW1lPSJuYXRpdmUtdXRpbHMubm9kZSIgU291cmNlRmlsZUxlbmd0aD0iMjM3MzM2IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iZjY5YjBkYmItMGY5NS00Njk5LWFhNjEtYjNiMGQwMGQ5ZDY3IiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IHZ1bGthbi0xLmRsbCAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05QQVJLRVJcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcVEVBTVNcQ1VSUkVOVFxWVUxLQU4tMS5ETEwmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDNFMkRERjk2NEZEMzI4Mjk1NTZERjk1RDM0MjAyQTU4NjA3MTlBNEU4RDY5NUI5RkY0QTlBRENDOTdGRDdDQjciIFNvdXJjZUZpbGVOYW1lPSJ2dWxrYW4tMS5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjczMDQxNiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjhjM2U5ZmEwLTJiMTQtNDFiMy1iYWIyLTg4YWQ2ZWE4NDBjMCIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBub2RlLWxvY2FsZS1pbmZvLXByb3ZpZGVyLm5vZGUgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OUEFSS0VSXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXFRFQU1TXENVUlJFTlRcUkVTT1VSQ0VTXEFQUC5BU0FSLlVOUEFDS0VEXE5PREVfTU9EVUxFU1xATVNURUFNU1xOT0RFLUxPQ0FMRS1JTkZPLVBST1ZJREVSXEJVSUxEXFJFTEVBU0VcTk9ERS1MT0NBTEUtSU5GTy1QUk9WSURFUi5OT0RFJiN4RDsmI3hBO1NpZ25lZCBieSBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMsIGJ1dCBtaXNzaW5nIHZlcnNpb24gaW5mb3JtYXRpb24iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHhGQzJGMEUyMDM5NkM5QkM0N0JGQUM5MTBBOTA2ODY0QTFDMDg1ODdGRjhGQTEzNDk2NUU2MkIxN0Y1ODMzMjkxIiBTb3VyY2VGaWxlTmFtZT0ibm9kZS1sb2NhbGUtaW5mby1wcm92aWRlci5ub2RlIiBTb3VyY2VGaWxlTGVuZ3RoPSI0NjU2ODAiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSJlNTg2MjczYy05ZDQ0LTRjMTYtOGE2MS1kMjY2NjBmZTFkMDEiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogb2ZmaWNlLWludC13aW4ubm9kZSAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05QQVJLRVJcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcVEVBTVNcQ1VSUkVOVFxSRVNPVVJDRVNcQVBQLkFTQVIuVU5QQUNLRURcTk9ERV9NT0RVTEVTXE9GRklDRS1JTlQtV0lOXEJVSUxEXFJFTEVBU0VcT0ZGSUNFLUlOVC1XSU4uTk9ERSYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4MkIwRkEyNDU1MDEzNzQ4N0E2QTBBNDI4RjVBQkYzQjFDNThGOEJFRDhGRjcxQTM3NkI0MzlFOTYyQkNFMzk2NyIgU291cmNlRmlsZU5hbWU9Im9mZmljZS1pbnQtd2luLm5vZGUiIFNvdXJjZUZpbGVMZW5ndGg9Ijg3MjY5NiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjYxZTc4ODQ2LTUwYjktNDczMy05Y2U3LTRjMjFmNDM2MGM5MiIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBJbnRlcmFjdGl2ZU5vdGlmaWNhdGlvbnMuZGxsIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlBBUktFUlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xBUFAuQVNBUi5VTlBBQ0tFRFxOT0RFX01PRFVMRVNcQE1JQ1JPU09GVFxFTEVDVFJPTi1XSU5ET1dTLUlOVEVSQUNUSVZFLU5PVElGSUNBVElPTlNcQlVJTERcUkVMRUFTRVxJTlRFUkFDVElWRU5PVElGSUNBVElPTlMuRExMJiN4RDsmI3hBO1NpZ25lZCBieSBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMsIGJ1dCBtaXNzaW5nIHZlcnNpb24gaW5mb3JtYXRpb24iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHg0QzM3MDEyMEYzNkY4MzkzRjdCRkI2QzlGOURBOUJCRjhCNTFDODNFQ0I5MTdCRDY4OUExMkI4MkE4RkQzNzVCIiBTb3VyY2VGaWxlTmFtZT0iSW50ZXJhY3RpdmVOb3RpZmljYXRpb25zLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iMTIzNjk2IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iYzVjMWQyN2QtZGViMy00ZTc4LWFjMTAtNzM2MjU1N2U4MWEzIiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IGFkYWwtd2luLm5vZGUgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OUEFSS0VSXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXFRFQU1TXENVUlJFTlRcUkVTT1VSQ0VTXEFQUC5BU0FSLlVOUEFDS0VEXE5PREVfTU9EVUxFU1xBREFMMzQtV0lOXEJVSUxEXFJFTEVBU0VcQURBTC1XSU4uTk9ERSYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4OUZFNkU0QzU1RTA2QTVBQ0M0QjQ5OEU5NzM1NkUxRkU2OEJDMDU3NThERkJEMUZBRkFBODU0M0RGNTA4Mzg1MCIgU291cmNlRmlsZU5hbWU9ImFkYWwtd2luLm5vZGUiIFNvdXJjZUZpbGVMZW5ndGg9IjEzNDM5MiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9ImU2MmQ5N2VkLWQ2NDctNDIxNy1hMWM5LTVlMDUwZDJiNzk4OCIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBNaWNyb3NvZnQuQXBwbGljYXRpb25zLlRlbGVtZXRyeS5XaW5kb3dzLmRsbCAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05QQVJLRVJcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcVEVBTVNcQ1VSUkVOVFxSRVNPVVJDRVNcTUVFVElORy1BRERJTlwxLjAuMjExMDUuMVxYODZcTUlDUk9TT0ZULkFQUExJQ0FUSU9OUy5URUxFTUVUUlkuV0lORE9XUy5ETEwmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDQyNTY5NDc4NTZBMkNERTEwOEQzQkM5NzFFNzM2Qjc1N0FDQUM0OUZBQTNERDIyNzBENzkyQjBFMTA5RkY5MEEiIFNvdXJjZUZpbGVOYW1lPSJNaWNyb3NvZnQuQXBwbGljYXRpb25zLlRlbGVtZXRyeS5XaW5kb3dzLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iMTYyMzg1NiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9ImM4ZWFiNTk4LWVmZWEtNDc1MS1iNjVjLWUwYmZmMzg1MTY3OSIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBuYXRpdmUtdXRpbHMubm9kZSAtIEhBU0ggUlVMRSBmb3Igc2lnbmVkIGZpbGUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcQUFST05QQVJLRVJcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcVEVBTVNcQ1VSUkVOVFxSRVNPVVJDRVNcQVBQLkFTQVIuVU5QQUNLRURcTk9ERV9NT0RVTEVTXE5BVElWRS1VVElMU1xCVUlMRFxSRUxFQVNFXE5BVElWRS1VVElMUy5OT0RFJiN4RDsmI3hBO1NpZ25lZCBieSBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMsIGJ1dCBtaXNzaW5nIHZlcnNpb24gaW5mb3JtYXRpb24iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHhGMEI3NTNGRkFBOTA0QkJBN0U1ODE0REM3QUUxOTMxODA1RDVEQkQwNDRBNDNGRDhERTBBRUI3M0EwNTU5RkFEIiBTb3VyY2VGaWxlTmFtZT0ibmF0aXZlLXV0aWxzLm5vZGUiIFNvdXJjZUZpbGVMZW5ndGg9IjIxOTkxMiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9ImUzZjBlMzc1LWYzNTYtNGMwZC1hMTg1LTZmOGViMTAwNWUxNCIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBmYXN0VGV4dC1sYW5ndWFnZWRldGVjdG9yLm5vZGUgLSBIQVNIIFJVTEUgZm9yIHNpZ25lZCBmaWxlIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFBUk9OUEFSS0VSXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXFRFQU1TXENVUlJFTlRcUkVTT1VSQ0VTXEFQUC5BU0FSLlVOUEFDS0VEXE5PREVfTU9EVUxFU1xATUlDUk9TT0ZUXEZBU1RURVhULUxBTkdVQUdFREVURUNUT1JcQlVJTERcUkVMRUFTRVxGQVNUVEVYVC1MQU5HVUFHRURFVEVDVE9SLk5PREUmI3hEOyYjeEE7U2lnbmVkIGJ5IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUywgYnV0IG1pc3NpbmcgdmVyc2lvbiBpbmZvcm1hdGlvbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweEUxN0VFMzlFNUY4Q0RGNDAzRTFGRTc5QzFFRTRCRTU4OEM2NzEyMjgyMkJEQzhBNERGRUE5MDk0NTQwQ0I0NjUiIFNvdXJjZUZpbGVOYW1lPSJmYXN0VGV4dC1sYW5ndWFnZWRldGVjdG9yLm5vZGUiIFNvdXJjZUZpbGVMZW5ndGg9IjYyNTkzNiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9Ijk5MDIwYTEwLTgwNTQtNGFkOC05ZGUwLWVlMDA5YjRlOGYyZiIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBrZXlib2FyZC1sYXlvdXQtbWFuYWdlci5ub2RlIC0gSEFTSCBSVUxFIGZvciBzaWduZWQgZmlsZSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlBBUktFUlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xBUFAuQVNBUi5VTlBBQ0tFRFxOT0RFX01PRFVMRVNcS0VZQk9BUkQtTEFZT1VUXEJVSUxEXFJFTEVBU0VcS0VZQk9BUkQtTEFZT1VULU1BTkFHRVIuTk9ERSYjeEQ7JiN4QTtTaWduZWQgYnkgTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTLCBidXQgbWlzc2luZyB2ZXJzaW9uIGluZm9ybWF0aW9uIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4RTVFRjYwMUVEQjNBRkNBNEE4QzVERTg4Q0ZDMUZGMUMxOUFCODJEMzlGRTkxQUM5M0YyMjgzNkQ3ODBEREE0QiIgU291cmNlRmlsZU5hbWU9ImtleWJvYXJkLWxheW91dC1tYW5hZ2VyLm5vZGUiIFNvdXJjZUZpbGVMZW5ndGg9IjE5MDE0NCIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iZmUwYWYxODAtMjlhZi00NzhhLWIwZGUtMGYwNmUxNjQzYmMxIiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IFVDUlRCQVNFLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlBBUktFUlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xNRUVUSU5HLUFERElOXDEuMC4yMTEwNS4xXFg4NlxVQ1JUQkFTRS5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0iIEJpbmFyeU5hbWU9IlVDUlRCQVNFLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iYjViZGI5NjYtNzhiOC00MWUzLWI3MmUtMWNiYTY1MmJhY2Q4IiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IEpTT04uTkVUIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogSlNPTi5ORVQmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcQWFyb25QYXJrZXJcQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcVGVhbXNcY3VycmVudCBDOlxVc2Vyc1xBYXJvblBhcmtlclxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxUZWFtc01lZXRpbmdBZGRpbiBDOlxVc2Vyc1xBYXJvblBhcmtlclxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxUZWFtc1ByZXNlbmNlQWRkaW4iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iSlNPTi5ORVQiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjdkOTE4ODA2LTE3YzMtNDYyNC1iZTFmLTg4M2VhZTcxN2I4NiIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBBUElTRVRTVFVCIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0mI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFVTRVJTXEFBUk9OUEFSS0VSXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXFRFQU1TXENVUlJFTlRcUkVTT1VSQ0VTXE1FRVRJTkctQURESU5cMS4wLjIxMTA1LjFcWDg2XEFQSS1NUy1XSU4tQ09SRS1DT05TT0xFLUwxLTEtMC5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0iIEJpbmFyeU5hbWU9IkFQSVNFVFNUVUIiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjM0Yjg2M2ZlLTgzODctNDg3ZC1iY2I0LTYwZDdjZTIxOWM3MiIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBNSUNST1NPRlQgQVNQLk5FVCBNVkMiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlQgQVNQLk5FVCBNVkMmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcQWFyb25QYXJrZXJcQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcVGVhbXNcY3VycmVudCBDOlxVc2Vyc1xBYXJvblBhcmtlclxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxUZWFtc01lZXRpbmdBZGRpbiBDOlxVc2Vyc1xBYXJvblBhcmtlclxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxUZWFtc1ByZXNlbmNlQWRkaW4iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUIEFTUC5ORVQgTVZDIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJjMDM0ODIxMC01NDc2LTQzZTMtYTUyYi1jNjczMGZjYTI2MzEiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogVkNSVU5USU1FMTQwLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDE1JiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlBBUktFUlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xNRUVUSU5HLUFERElOXDEuMC4yMTEwNS4xXFg4NlxWQ1JVTlRJTUUxNDAuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDE1IiBCaW5hcnlOYW1lPSJWQ1JVTlRJTUUxNDAuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI3MzFjOGIyMy00NmE0LTQ1ZTMtYmQ1NS1kZGExZGNiZjcyZjgiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogTUlDUk9TT0ZUIEJPTkQiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlQgQk9ORCYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluOiBDOlxVc2Vyc1xBYXJvblBhcmtlclxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxUZWFtc1xjdXJyZW50IEM6XFVzZXJzXEFhcm9uUGFya2VyXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XFRlYW1zTWVldGluZ0FkZGluIEM6XFVzZXJzXEFhcm9uUGFya2VyXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XFRlYW1zUHJlc2VuY2VBZGRpbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlQgQk9ORCIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iZjk3ZWI3M2EtNDczYy00ZmY3LTg0NjktMmVjMjI0NDYwM2I1IiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IE1JQ1JPU09GVCBJREVOVElUWU1PREVMIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUIElERU5USVRZTU9ERUwmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogQzpcVXNlcnNcQWFyb25QYXJrZXJcQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcVGVhbXNcY3VycmVudCBDOlxVc2Vyc1xBYXJvblBhcmtlclxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxUZWFtc01lZXRpbmdBZGRpbiBDOlxVc2Vyc1xBYXJvblBhcmtlclxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxUZWFtc1ByZXNlbmNlQWRkaW4iIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUIElERU5USVRZTU9ERUwiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImU1ZTdkMDhlLTFiYWUtNDNmZi1hNzI0LTU0MWU2YzEyMjUyNiIgTmFtZT0iTWljcm9zb2Z0IFRlYW1zOiBNSUNST1NPRlTCqSBBREFMIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwqkgQURBTCYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluOiBDOlxVc2Vyc1xBYXJvblBhcmtlclxBcHBEYXRhXExvY2FsXE1pY3Jvc29mdFxUZWFtc1xjdXJyZW50IEM6XFVzZXJzXEFhcm9uUGFya2VyXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XFRlYW1zTWVldGluZ0FkZGluIEM6XFVzZXJzXEFhcm9uUGFya2VyXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XFRlYW1zUHJlc2VuY2VBZGRpbiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCqSBBREFMIiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSIwMTBiN2JlNC04YjhjLTRlZmEtODAzYi00NmQzOWY4ZGJhZDgiIE5hbWU9Ik1pY3Jvc29mdCBUZWFtczogTUlDUk9TT0ZUIFRFQU1TIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUIFRFQU1TJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO0ZpbGUocykgZm91bmQgaW46IEM6XFVzZXJzXEFhcm9uUGFya2VyXEFwcERhdGFcTG9jYWxcTWljcm9zb2Z0XFRlYW1zXGN1cnJlbnQgQzpcVXNlcnNcQWFyb25QYXJrZXJcQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcVGVhbXNNZWV0aW5nQWRkaW4gQzpcVXNlcnNcQWFyb25QYXJrZXJcQXBwRGF0YVxMb2NhbFxNaWNyb3NvZnRcVGVhbXNQcmVzZW5jZUFkZGluIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVCBURUFNUyIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iY2IzYjQ3NGQtN2ZmMy00MTJhLWIzMmEtYWM4ZjI4Y2MzZTM1IiBOYW1lPSJNaWNyb3NvZnQgVGVhbXM6IE1TVkNQMTQwLkRMTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIFZJU1VBTCBTVFVESU/CriAyMDE1JiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxVU0VSU1xBQVJPTlBBUktFUlxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxURUFNU1xDVVJSRU5UXFJFU09VUkNFU1xNRUVUSU5HLUFERElOXDEuMC4yMTEwNS4xXFg4NlxNU1ZDUDE0MC5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gVklTVUFMIFNUVURJT8KuIDIwMTUiIEJpbmFyeU5hbWU9Ik1TVkNQMTQwLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iMWI2MTI1ZmQtMjM3My00NzFlLTliY2YtMDUzMDExMWJiMmVmIiBOYW1lPSJPbmVEcml2ZSAoV2luMTAgdjE2MDcgaW5pdGlhbCBzdGF0ZSk6IE1JQ1JPU09GVCBPTkVEUklWRSIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVCBPTkVEUklWRSYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluIDogJU9TRFJJVkUlXFVTRVJTXHRlc3R1c2VyXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDE3LjMuNjM4MS4wNDA1IiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVCBPTkVEUklWRSIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iNWM1M2IyYjctZGNiZS00OGY4LWI0ZmEtYjNmNGI0YjAxNGY4IiBOYW1lPSJPbmVEcml2ZSAoV2luMTAgdjE2MDcgaW5pdGlhbCBzdGF0ZSk6IFNRTUFQSS5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtPcmlnaW5hbCBwYXRoOiAlT1NEUklWRSVcVVNFUlNcdGVzdHVzZXJcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMTcuMy42MzgxLjA0MDVcU1FNQVBJLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlTCriBXSU5ET1dTwq4gT1BFUkFUSU5HIFNZU1RFTSIgQmluYXJ5TmFtZT0iU1FNQVBJLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iMTg5OTUwMWMtMmZhYy00M2UzLTgzYzQtNDZlODFiOGQ5NTYzIiBOYW1lPSJPbmVEcml2ZSAoV2luMTAgdjE2MDcgaW5pdGlhbCBzdGF0ZSk6IEVUV0xPRy5ETEwiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBXSU5ET1dTIExJVkUmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFVTRVJTXHRlc3R1c2VyXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDE3LjMuNjM4MS4wNDA1XEVUV0xPRy5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iV0lORE9XUyBMSVZFIiBCaW5hcnlOYW1lPSJFVFdMT0cuRExMIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iMGVhZjA4YTgtMmFjZi00MWY0LTlmOWUtMzZlYThiMWUwMzEwIiBOYW1lPSJPbmVEcml2ZSAoV2luMTAgdjE2MDcgaW5pdGlhbCBzdGF0ZSk6IEZpbGVDb0F1dGhMaWIuZGxsIC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXHRlc3R1c2VyXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDE3LjMuNjM4MS4wNDA1XEZJTEVDT0FVVEhMSUIuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4QjlDMzdERTQwMjg4MjlFQUVBQjFDOERBOUI2QjNDRDk1MDI0NjJENzZDM0Q5MkU5MzM0MUQ5MjMyQzZBQjg4MCIgU291cmNlRmlsZU5hbWU9IkZpbGVDb0F1dGhMaWIuZGxsIiBTb3VyY2VGaWxlTGVuZ3RoPSIyNjgxNiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjkyNWZjNGVlLWRhNTktNGJhYy05ZmYxLWIyYzRhZTU1ODMwYSIgTmFtZT0iT25lRHJpdmUgKFdpbjEwIHYxNjA3IGluaXRpYWwgc3RhdGUpOiBDbGllbnRUZWxlbWV0cnkuZGxsIC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXHRlc3R1c2VyXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDE3LjMuNjM4MS4wNDA1XENMSUVOVFRFTEVNRVRSWS5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHg3NzAyMTI5RkE1RTdFNTc5MEZCMTFGNDAwNkY3MjQ4NDREOEUzRjZBQ0E2QjRERkMyNzAwRjcyNjU2MTAzNUQwIiBTb3VyY2VGaWxlTmFtZT0iQ2xpZW50VGVsZW1ldHJ5LmRsbCIgU291cmNlRmlsZUxlbmd0aD0iNjc5NjI0IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVIYXNoUnVsZSBJZD0iNGI1YTk0NzUtOTBiMy00M2FhLWI5NDMtYzY0ZWM5ZTk2ZDJiIiBOYW1lPSJPbmVEcml2ZSAoV2luMTAgdjE2MDcgaW5pdGlhbCBzdGF0ZSk6IENsaWVudFRlbGVtZXRyeS5kbGwgLSBIQVNIIFJVTEUiIERlc2NyaXB0aW9uPSJJZGVudGlmaWVkIGluOiAlT1NEUklWRSVcVVNFUlNcdGVzdHVzZXJcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMTcuMy42MzgxLjA0MDVcQU1ENjRcQ0xJRU5UVEVMRU1FVFJZLkRMTCIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgICAgICAgICA8RmlsZUhhc2ggVHlwZT0iU0hBMjU2IiBEYXRhPSIweDE5Mzc0NDA1M0YxMTdEMjRGQUM1MEYwNUQyMUNDNUFENUY1N0UyOUYxRkFGMUVDMTg1MDYxMEI4QUJDQjgzNEUiIFNvdXJjZUZpbGVOYW1lPSJDbGllbnRUZWxlbWV0cnkuZGxsIiBTb3VyY2VGaWxlTGVuZ3RoPSI5NTkxNjgiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZUhhc2hSdWxlIElkPSI5ZDY1MjJiMS0wY2QwLTRkNjEtYTU5Yy1iY2IyMWJmNjRmZjciIE5hbWU9Ik9uZURyaXZlIChXaW4xMCB2MTYwNyBpbml0aWFsIHN0YXRlKTogRmlsZUNvQXV0aExpYjY0LmRsbCAtIEhBU0ggUlVMRSIgRGVzY3JpcHRpb249IklkZW50aWZpZWQgaW46ICVPU0RSSVZFJVxVU0VSU1x0ZXN0dXNlclxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxPTkVEUklWRVwxNy4zLjYzODEuMDQwNVxBTUQ2NFxGSUxFQ09BVVRITElCNjQuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICAgICAgICAgIDxGaWxlSGFzaCBUeXBlPSJTSEEyNTYiIERhdGE9IjB4Nzc2MTg5ODBCNjY4MzY0RjdDMjdBNDVFMzZBNThENDU2RTlGMkQ0MTg1MkIyNjY2Rjg4NkRFOTcyOEJBMzJCRCIgU291cmNlRmlsZU5hbWU9IkZpbGVDb0F1dGhMaWI2NC5kbGwiIFNvdXJjZUZpbGVMZW5ndGg9IjMxOTM2IiAvPgogICAgICAgICAgICA8L0ZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZUhhc2hSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSI1MDcxYjQ1OS0yMDUxLTQxZmQtYmZjZi00MGI3OThiMzlkMTUiIE5hbWU9Ik9uZURyaXZlIChXaW4xMCB2MTgwMyBpbml0aWFsIHN0YXRlKTogTUlDUk9TT0ZUwq4gQURBTCIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IE1JQ1JPU09GVMKuIEFEQUwmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogJU9TRFJJVkUlXFVTRVJTXHRlc3R1c2VyXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDE3LjMuNjgxNi4wMzEzIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIEFEQUwiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjEyZTk4OWYwLTVjNzEtNDAzYi1hZjZmLTM0Njk2NDMzZTc5YSIgTmFtZT0iT25lRHJpdmUgKFdpbjEwIHYxODAzIGluaXRpYWwgc3RhdGUpOiBNSUNST1NPRlQgT05FRFJJVkUiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlQgT05FRFJJVkUmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogJU9TRFJJVkUlXFVTRVJTXHRlc3R1c2VyXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDE3LjMuNjgxNi4wMzEzIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVCBPTkVEUklWRSIgQmluYXJ5TmFtZT0iKiI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlUHVibGlzaGVyUnVsZSBJZD0iNjBjYjUwNmUtZGY5Yi00OGQzLThjNGItMDkyYjE4Mzk3ZTY3IiBOYW1lPSJPbmVEcml2ZSAoV2luMTAgdjE4MDMgaW5pdGlhbCBzdGF0ZSk6IFFUNSIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IFFUNSYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluOiAlT1NEUklWRSVcVVNFUlNcdGVzdHVzZXJcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMTcuMy42ODE2LjAzMTMiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iUVQ1IiBCaW5hcnlOYW1lPSIqIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSJkYmQ0MWUzNC00MDJiLTRlMmYtOTQ0Yy01NDU2NzAwMzVjNTkiIE5hbWU9Ik9uZURyaXZlIChXaW4xMCB2MTgwMyBpbml0aWFsIHN0YXRlKTogUVQgUVVJQ0sgMkQgUkVOREVSRVIgKFFUIDUuNy4wKSIgRGVzY3JpcHRpb249IlByb2R1Y3Q6IFFUIFFVSUNLIDJEIFJFTkRFUkVSIChRVCA1LjcuMCkmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogJU9TRFJJVkUlXFVTRVJTXHRlc3R1c2VyXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDE3LjMuNjgxNi4wMzEzIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9IlFUIFFVSUNLIDJEIFJFTkRFUkVSIChRVCA1LjcuMCkiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjE2MzM0OWIyLWQ2NjAtNGEzYi1iMTdhLTRjMTEzYzc2NTc3MyIgTmFtZT0iT25lRHJpdmUgKFdpbjEwIHYxODAzIGluaXRpYWwgc3RhdGUpOiBTUU1BUEkuRExMIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0mI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFVTRVJTXHRlc3R1c2VyXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDE3LjMuNjgxNi4wMzEzXFNRTUFQSS5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0iIEJpbmFyeU5hbWU9IlNRTUFQSS5ETEwiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjY5NDEwNGZmLWYxNzUtNDBhNy1hOWM1LTljYzUwM2VhZTI0YyIgTmFtZT0iT25lRHJpdmUgKFdpbjEwIHYxODAzIGluaXRpYWwgc3RhdGUpOiBFVFdMT0cuRExMIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogV0lORE9XUyBMSVZFJiN4RDsmI3hBO1B1Ymxpc2hlcjogTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTJiN4RDsmI3hBO09yaWdpbmFsIHBhdGg6ICVPU0RSSVZFJVxVU0VSU1x0ZXN0dXNlclxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxPTkVEUklWRVwxNy4zLjY4MTYuMDMxM1xFVFdMT0cuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9IldJTkRPV1MgTElWRSIgQmluYXJ5TmFtZT0iRVRXTE9HLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9IjMzZWM0MmNmLTA4NzUtNDJiNy1iNGE1LTU5NjI5NTE2NjA2YiIgTmFtZT0iT25lRHJpdmUgKFdpbjEwIHYxODAzIGluaXRpYWwgc3RhdGUpOiBsaWJHTEVTdjIuZGxsIC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXHRlc3R1c2VyXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDE3LjMuNjgxNi4wMzEzXExJQkdMRVNWMi5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHgxQUEzNThCMDc3MjA4MUZBQ0RDRjdENEU2Rjg0MzJFMDg1QTNBNjJEODgxM0UwRUJGNTE4NTI5NkYxRkZGNEU3IiBTb3VyY2VGaWxlTmFtZT0ibGliR0xFU3YyLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iMjAwNTYzMiIgLz4KICAgICAgICAgICAgPC9GaWxlSGFzaENvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVIYXNoUnVsZT4KICAgIDxGaWxlSGFzaFJ1bGUgSWQ9ImQ3NmZjNTVjLTM4NmEtNDZlZi04MTgzLWE3YzIyMzNmZTExNSIgTmFtZT0iT25lRHJpdmUgKFdpbjEwIHYxODAzIGluaXRpYWwgc3RhdGUpOiBsaWJFR0wuZGxsIC0gSEFTSCBSVUxFIiBEZXNjcmlwdGlvbj0iSWRlbnRpZmllZCBpbjogJU9TRFJJVkUlXFVTRVJTXHRlc3R1c2VyXEFQUERBVEFcTE9DQUxcTUlDUk9TT0ZUXE9ORURSSVZFXDE3LjMuNjgxNi4wMzEzXExJQkVHTC5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVIYXNoQ29uZGl0aW9uPgogICAgICAgICAgICAgICAgPEZpbGVIYXNoIFR5cGU9IlNIQTI1NiIgRGF0YT0iMHhCMTJEMzM4ODQ0RTREQ0RGQUQ4Q0RGQzlCMjUwMzYxQzBBRUQ4NzEyMjVBQTA1M0MyREE4NzE3OEQ4MkRBRDdBIiBTb3VyY2VGaWxlTmFtZT0ibGliRUdMLmRsbCIgU291cmNlRmlsZUxlbmd0aD0iMjY3NTIiIC8+CiAgICAgICAgICAgIDwvRmlsZUhhc2hDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlSGFzaFJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImYyOTQ1MTFiLWMxOTctNDgxYS1hZDBlLWY0Y2I3YjRmOWZjYyIgTmFtZT0iT25lRHJpdmUgKFdpbjEwIHYxODA5IGluaXRpYWwgc3RhdGUpOiBNSUNST1NPRlQgT05FRFJJVkUiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlQgT05FRFJJVkUmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFCQllcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMTguMTQzLjA3MTcuMDAwMiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlQgT05FRFJJVkUiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjU1ODAxNmZlLTg4YzItNGU2ZS1hYzgxLTQ5OTZlY2Q4MmI3NSIgTmFtZT0iT25lRHJpdmUgKFdpbjEwIHYxODA5IGluaXRpYWwgc3RhdGUpOiBMSUJFR0wiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBMSUJFR0wmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFCQllcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMTguMTQzLjA3MTcuMDAwMiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJMSUJFR0wiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImZjMWQxMGFjLTRmMzYtNDIyMS05YTAxLTgzOTdkZGQ4MWQ3YiIgTmFtZT0iT25lRHJpdmUgKFdpbjEwIHYxODA5IGluaXRpYWwgc3RhdGUpOiBMSUJHTEVTVjIiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBMSUJHTEVTVjImI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFCQllcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMTguMTQzLjA3MTcuMDAwMiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJMSUJHTEVTVjIiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImYxNmIzMDA2LTI4MTYtNDUyNC1hYTRhLWVlMzFhZTYxMjcyZCIgTmFtZT0iT25lRHJpdmUgKFdpbjEwIHYxODA5IGluaXRpYWwgc3RhdGUpOiBNSUNST1NPRlQgQUQgUk1TIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUIEFEIFJNUyYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluOiAlT1NEUklWRSVcVVNFUlNcQUJCWVxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxPTkVEUklWRVwxOC4xNDMuMDcxNy4wMDAyIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVCBBRCBSTVMiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjUzYTI1Y2IzLWRiZmYtNDk2Yy1hODdkLTRlOGZhM2NjMmRhMyIgTmFtZT0iT25lRHJpdmUgKFdpbjEwIHYxODA5IGluaXRpYWwgc3RhdGUpOiBNSUNST1NPRlTCqSBBREFMIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwqkgQURBTCYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluOiAlT1NEUklWRSVcVVNFUlNcQUJCWVxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxPTkVEUklWRVwxOC4xNDMuMDcxNy4wMDAyIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKpIEFEQUwiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjQ0ZDY5Yzk2LWEzYmItNDRlYS04ZGI0LTk5ZGY2OTg4M2RkZiIgTmFtZT0iT25lRHJpdmUgKFdpbjEwIHYxODA5IGluaXRpYWwgc3RhdGUpOiBNSUNST1NPRlQuT0ZGSUNFLklSTS5NU09QUk9URUNUT1IiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlQuT0ZGSUNFLklSTS5NU09QUk9URUNUT1ImI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFCQllcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMTguMTQzLjA3MTcuMDAwMiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlQuT0ZGSUNFLklSTS5NU09QUk9URUNUT1IiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImI3ZDAzNjNiLWU5Y2QtNDJlMC1iMjRmLWI4M2JlYWYzOGI0ZCIgTmFtZT0iT25lRHJpdmUgKFdpbjEwIHYxODA5IGluaXRpYWwgc3RhdGUpOiBNSUNST1NPRlQuT0ZGSUNFLklSTS5PRkNQUk9URUNUT1IiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlQuT0ZGSUNFLklSTS5PRkNQUk9URUNUT1ImI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFCQllcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMTguMTQzLjA3MTcuMDAwMiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlQuT0ZGSUNFLklSTS5PRkNQUk9URUNUT1IiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImRlOTUxYTU2LTM3NDgtNDQ4ZS1hYmNmLTA2MzhlNzU4ODk5NCIgTmFtZT0iT25lRHJpdmUgKFdpbjEwIHYxODA5IGluaXRpYWwgc3RhdGUpOiBNSUNST1NPRlQuT0ZGSUNFLklSTS5QREZQUk9URUNUT1IiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBNSUNST1NPRlQuT0ZGSUNFLklSTS5QREZQUk9URUNUT1ImI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFCQllcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMTguMTQzLjA3MTcuMDAwMiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJNSUNST1NPRlQuT0ZGSUNFLklSTS5QREZQUk9URUNUT1IiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImE2ZmE3NGZhLWVjYjYtNGI1ZS1iZWMwLTg3YjJhMWI1ZDkzZCIgTmFtZT0iT25lRHJpdmUgKFdpbjEwIHYxODA5IGluaXRpYWwgc3RhdGUpOiBUSEUgT1BFTlNTTCBUT09MS0lUIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogVEhFIE9QRU5TU0wgVE9PTEtJVCYjeEQ7JiN4QTtQdWJsaXNoZXI6IE89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyYjeEQ7JiN4QTtGaWxlKHMpIGZvdW5kIGluOiAlT1NEUklWRSVcVVNFUlNcQUJCWVxBUFBEQVRBXExPQ0FMXE1JQ1JPU09GVFxPTkVEUklWRVwxOC4xNDMuMDcxNy4wMDAyIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9IlRIRSBPUEVOU1NMIFRPT0xLSVQiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9ImRlNmY5NDNmLWE0ZGYtNGM0My1iYzFhLTkzOTMwZjk3ZTc5YyIgTmFtZT0iT25lRHJpdmUgKFdpbjEwIHYxODA5IGluaXRpYWwgc3RhdGUpOiBRVDUiIERlc2NyaXB0aW9uPSJQcm9kdWN0OiBRVDUmI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7RmlsZShzKSBmb3VuZCBpbjogJU9TRFJJVkUlXFVTRVJTXEFCQllcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMTguMTQzLjA3MTcuMDAwMiIgVXNlck9yR3JvdXBTaWQ9IlMtMS0xLTAiIEFjdGlvbj0iQWxsb3ciPgogICAgICAgIDxDb25kaXRpb25zPgogICAgICAgICAgICA8RmlsZVB1Ymxpc2hlckNvbmRpdGlvbiBQdWJsaXNoZXJOYW1lPSJPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMiIFByb2R1Y3ROYW1lPSJRVDUiIEJpbmFyeU5hbWU9IioiPgogICAgICAgICAgICAgICAgPEJpbmFyeVZlcnNpb25SYW5nZSBMb3dTZWN0aW9uPSIqIiBIaWdoU2VjdGlvbj0iKiIgLz4KICAgICAgICAgICAgPC9GaWxlUHVibGlzaGVyQ29uZGl0aW9uPgogICAgICAgIDwvQ29uZGl0aW9ucz4KICAgIDwvRmlsZVB1Ymxpc2hlclJ1bGU+CiAgICA8RmlsZVB1Ymxpc2hlclJ1bGUgSWQ9IjEzMTZiODYyLTliNzEtNDEzYi1iNjdjLTYyNDU4N2QzZGQ5ZCIgTmFtZT0iT25lRHJpdmUgKFdpbjEwIHYxODA5IGluaXRpYWwgc3RhdGUpOiBBUElTRVRTVFVCIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0mI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFVTRVJTXEFCQllcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMTguMTQzLjA3MTcuMDAwMlxBUEktTVMtV0lOLUNPUkUtQ09OU09MRS1MMS0xLTAuRExMIiBVc2VyT3JHcm91cFNpZD0iUy0xLTEtMCIgQWN0aW9uPSJBbGxvdyI+CiAgICAgICAgPENvbmRpdGlvbnM+CiAgICAgICAgICAgIDxGaWxlUHVibGlzaGVyQ29uZGl0aW9uIFB1Ymxpc2hlck5hbWU9Ik89TUlDUk9TT0ZUIENPUlBPUkFUSU9OLCBMPVJFRE1PTkQsIFM9V0FTSElOR1RPTiwgQz1VUyIgUHJvZHVjdE5hbWU9Ik1JQ1JPU09GVMKuIFdJTkRPV1PCriBPUEVSQVRJTkcgU1lTVEVNIiBCaW5hcnlOYW1lPSJBUElTRVRTVFVCIj4KICAgICAgICAgICAgICAgIDxCaW5hcnlWZXJzaW9uUmFuZ2UgTG93U2VjdGlvbj0iKiIgSGlnaFNlY3Rpb249IioiIC8+CiAgICAgICAgICAgIDwvRmlsZVB1Ymxpc2hlckNvbmRpdGlvbj4KICAgICAgICA8L0NvbmRpdGlvbnM+CiAgICA8L0ZpbGVQdWJsaXNoZXJSdWxlPgogICAgPEZpbGVQdWJsaXNoZXJSdWxlIElkPSIyOTUxMDFmZC02MDMwLTRhYzItYjkzOC0yMzU4NTVhZjI5YzEiIE5hbWU9Ik9uZURyaXZlIChXaW4xMCB2MTgwOSBpbml0aWFsIHN0YXRlKTogVUNSVEJBU0UuRExMIiBEZXNjcmlwdGlvbj0iUHJvZHVjdDogTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0mI3hEOyYjeEE7UHVibGlzaGVyOiBPPU1JQ1JPU09GVCBDT1JQT1JBVElPTiwgTD1SRURNT05ELCBTPVdBU0hJTkdUT04sIEM9VVMmI3hEOyYjeEE7T3JpZ2luYWwgcGF0aDogJU9TRFJJVkUlXFVTRVJTXEFCQllcQVBQREFUQVxMT0NBTFxNSUNST1NPRlRcT05FRFJJVkVcMTguMTQzLjA3MTcuMDAwMlxVQ1JUQkFTRS5ETEwiIFVzZXJPckdyb3VwU2lkPSJTLTEtMS0wIiBBY3Rpb249IkFsbG93Ij4KICAgICAgICA8Q29uZGl0aW9ucz4KICAgICAgICAgICAgPEZpbGVQdWJsaXNoZXJDb25kaXRpb24gUHVibGlzaGVyTmFtZT0iTz1NSUNST1NPRlQgQ09SUE9SQVRJT04sIEw9UkVETU9ORCwgUz1XQVNISU5HVE9OLCBDPVVTIiBQcm9kdWN0TmFtZT0iTUlDUk9TT0ZUwq4gV0lORE9XU8KuIE9QRVJBVElORyBTWVNURU0iIEJpbmFyeU5hbWU9IlVDUlRCQVNFLkRMTCI+CiAgICAgICAgICAgICAgICA8QmluYXJ5VmVyc2lvblJhbmdlIExvd1NlY3Rpb249IioiIEhpZ2hTZWN0aW9uPSIqIiAvPgogICAgICAgICAgICA8L0ZpbGVQdWJsaXNoZXJDb25kaXRpb24+CiAgICAgICAgPC9Db25kaXRpb25zPgogICAgPC9GaWxlUHVibGlzaGVyUnVsZT4KPC9SdWxlQ29sbGVjdGlvbj4="
    }
  ],
  "assignments@odata.context": "https://graph.microsoft.com/beta/$metadata#deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.windows10CustomConfiguration/assignments",
  "assignments@odata.associationLink": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.windows10CustomConfiguration/assignments/$ref",
  "assignments@odata.navigationLink": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.windows10CustomConfiguration/assignments",
  "assignments": [],
  "deviceSettingStateSummaries@odata.associationLink": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.windows10CustomConfiguration/deviceSettingStateSummaries/$ref",
  "deviceSettingStateSummaries@odata.navigationLink": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.windows10CustomConfiguration/deviceSettingStateSummaries",
  "deviceStatuses@odata.associationLink": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.windows10CustomConfiguration/deviceStatuses/$ref",
  "deviceStatuses@odata.navigationLink": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.windows10CustomConfiguration/deviceStatuses",
  "deviceStatusOverview@odata.associationLink": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.windows10CustomConfiguration/deviceStatusOverview/$ref",
  "deviceStatusOverview@odata.navigationLink": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.windows10CustomConfiguration/deviceStatusOverview",
  "groupAssignments@odata.associationLink": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.windows10CustomConfiguration/groupAssignments/$ref",
  "groupAssignments@odata.navigationLink": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.windows10CustomConfiguration/groupAssignments",
  "userStatuses@odata.associationLink": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.windows10CustomConfiguration/userStatuses/$ref",
  "userStatuses@odata.navigationLink": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.windows10CustomConfiguration/userStatuses",
  "userStatusOverview@odata.associationLink": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.windows10CustomConfiguration/userStatusOverview/$ref",
  "userStatusOverview@odata.navigationLink": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.windows10CustomConfiguration/userStatusOverview",
  "#microsoft.graph.assign": {
    "title": "microsoft.graph.assign",
    "target": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.deviceConfiguration/microsoft.graph.assign"
  },
  "#microsoft.graph.assignedAccessMultiModeProfiles": {
    "title": "microsoft.graph.assignedAccessMultiModeProfiles",
    "target": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.deviceConfiguration/microsoft.graph.assignedAccessMultiModeProfiles"
  },
  "#microsoft.graph.windowsPrivacyAccessControls": {
    "title": "microsoft.graph.windowsPrivacyAccessControls",
    "target": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.deviceConfiguration/microsoft.graph.windowsPrivacyAccessControls"
  },
  "#microsoft.graph.getOmaSettingPlainTextValue": {
    "title": "microsoft.graph.getOmaSettingPlainTextValue",
    "target": "https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations('48c69e85-abae-4fd5-b5ed-4b86ca1bae2f')/microsoft.graph.deviceConfiguration/microsoft.graph.getOmaSettingPlainTextValue"
  }
}
